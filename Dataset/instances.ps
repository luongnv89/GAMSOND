%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: instances.dvi
%%CreationDate: Tue Mar 20 10:11:08 2012
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMMI10 CMR10 CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o instances.ps instances.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.03.20:1011
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /similarequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D57D4B3E8291F6E6A5F6F1AA5D58A0A37AEEBFC
1457D8B9ECCC656FE956D3C18AC013A937D40058C402DE169D3851302F1295B2
597B75047F5D303BD6319C08BB94137D6C01C124C07629747C449509A60E9F85
120666794FF2288AD91B17E5AB2CE9CA8F0F21B4E13CBF487B057C953331F029
994A862A46D967391BCBD7D5332BB4D2B07AC3B810C7376F3A1F4FBC47363371
AE849A41AA6FDAC7F74137B57FC9F9F79A62E7E210FFC56D24A9F6E0E7C22E47
1F40F359D255C7570861C3FB1E0891592ECDBC671A27B440D3CCE6E48CD53DFF
678886F8BA3AD327BA5A54F25C4BDE8E0896E2C64A769DB31F754755397F7D6E
08480D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED29D73AA0FAB50834FC3DADB6FC2A9F556DBD5F54C609517F454C4899838327
D74189A6372F447F46FE7BC050836F684C3BB8CF10786443005F7922728211B0
CCB196A461E4B62C25389A4A428994DB6BAC426DD30F9F772DFF8130679AC356
F55822EEFE030D080291D452ACEDC5D0ED19E523000D2B35448E633FB64A757C
C8EC0638C8AB8932CBFDFB9FB8409D4B280567E8D5B9EA8E8AF21A352BEEFD6F
0F1E29DF2C698AB39B218ECC7BB9128F40DFF15853528C37F6022D698727E7A3
2DCA0C8637972318DB9C851ADEA52E64DE64132CC1F25A0DB6F5B8895EB758A3
ED81F506337B1557E44C36771D1B98B28A28F72651DB44BC63C5E50C9DEED687
E06F23A0D0EE40E4730E8575200F70D3AE26F23322B5F5B1AD9F6564730081EC
25AF5765919460760E84DEFC0D831B51A49A5457C0CC70B58A5018F201304D04
37CFC4AA04AEBD8962186FAABF1E2593031D084359B02ECE352DE3769A9CBDDE
C9665BBFC81DDBFBBABB1654FAA5CAEA8EA2C6778463735B05E0FA606348288C
B8E6058FBF1659C255392A89742025378CF853F6A8188534F1F610D7A7A77C41
5D05122439FC3BDD16A69CE127600DA42948F1F3BB2DB772E57DEBE00CE4F996
47DD327677A384D23915B6F54E3B94ED9209A41A96447D4E5E1A15910769678F
C5D929DEC57025F82CEEAFFFFEF2A17816E2266EACD9B591B91D2F2969F0B974
1DC34CCC255951E05DE00CDDA4763AAFF2692126B4FADF5B6CD7602AA4C8665A
3C51B5D5AE82278DE0CA3791B2460FB455222C04AA092C76817C62B6D9BD1D20
BD591EEE6098928404163ED36411731377EA13635F17865AD53AC83C6C934A64
BC79B61186AA832CA5F465799D0F91E4E7E8FCB04CCA03C9460F98EF83E71BFA
0BA8232A860860D6F51AB6DEC1CD3393BC03C687015B182F1811D000226A3706
E7696D31CD8F176552E9231CC55FAAC46EDA9984444FC7509374E603DD319A7C
DE0CDC2FDD22CD151C8B4EF3638C8AFDCDAB684CE25A54249D9675D59C1ACEF5
8273EFC333228337819EEECB35B69369C888AA4726557091DF438E3353A86F3A
60107DE2D0E8F69256F755A7F6C79275EFE82703F0F5BD708901000DE64F33B9
5D5FA87CFE2F881CA304C1E2CBADC35CC868597733C80576D274C172BE5D7C17
BD16A11DFD7D48F4FE71A6869C42FCF442B3270FD16C0FC15C0DCB4C59BBAE3A
0C3B766E84C51CC9EC74AE271326689E007EF544C2324DD24A7CC42F559549FD
755518688DB56FF76362FD9E1C29E1A34183509E5CD1768470D8A13609B66B1B
21C0668DEA8D13A9A15DC7802A111D96E639679CA6DA215459EFC282548C36DA
35508230C17E595D0E697FEC6C9A25BA828328BEE2C4B077D539CDCD032B57FB
FD39547951598697B33CC8C54E71E075F1693EFA5483DB7DEBB6D492847AE57C
85675CF04BFD1410B56E616F68C39FF2C8892DA1D9E5D3042D125734EB53A809
0EE563355DABB230D76693C8E5802D2FBD34ADBC0D48CE7D36BDCBAAEC827EC5
884399B3CF76512E8B41609794029A4CA794230A55126506EA48824D9EAC0CB3
8E3BFD42896469D83A6A168B34B0F1FF61A2D99F8C01DF76EC8F30906003D98F
0F6A1CEE4A6444BFF43C8B73F7C9C2BE23B43458474D510E94FCE182C5316541
3E1E14759C1D2CAD099DD60AA7BFA31435DD57C23D90AF7A2C3AF121144C3038
D3B4F66E0D1013682B37DB110D2F362FC1C2780E963028ED2ECA0B7A027A91E5
1840E3E9F4E403A22EA36E867F53739AA226E5184AC72C4B7094FAA48BE555CB
0DC8E762D429B64C360D5ADD3D92A76A55B20FBDC8F08B4857C2B99E52AD0DAB
8E35590CEA6A16E993261B6B73BC61EC9CC7B9F5F3210BE3DF46B4494D36D844
F53727F4B65D85450350A99BFA287A8C9946FD16E663D804A178F70AFFEE9A30
109089E1016DF8FA12A8A16143D6FA33885C9B98C36953DAED7A0061A540F22C
B81BC3816E6267EAF312EA478C1605A709DB9A94BC08D61C1A6E98311D98F92D
7A1F13650E3438D14F8E17601D57F7527CFB1262851AD5896ACA01B2989993D4
32EE93A75860E509CB57440EBEBB371D8C04A76E7B57B775F889B9CE9BE40376
F60BD85C374F605A05FC7CBFB86718C5FCFF9E75B524F1A064F5474731EBA0B6
87076CCD14323E68794CCECAA5994E06CF580742E50FD7AED054EEE872172CF5
DCFABFB73E4152C23C1D4F3AE318FCF4D907E0F8A0DC033E93B040A6121DA499
CC2DD64BDF021AD51E5460CFA0338DF1F5726862FAF9150515334719C33160B2
617450B1B61F32572C4946A32BADCDAB81C49DD4B88BC6F4D49FBFEEAB3F2E9F
E6A9BCF820FB6AF873FDD624ED688CC9A6DC06F4B0187CC87BF9FCC168E7DF3B
43FCB4C9DF1736074582183309AE031989B3B60737C546E9A01A591EA3B121B0
82110C6E034EAB5317DAD5B6633F0A13B9872C8CA009ED9A273DBB614830B33A
EFDA5E40DF238862E45E699A220C9A5DC51B3345749C0F3396B9CCEC6870E828
171F723D3038B71477715A00DD0FF50F7A508EF9B24E264861A50BB4E5B18753
CB1E6E18FD08BF00E01DB6497F87584644F975CC568F473DBDE6278D74ECB317
2F5E2F1A6E0C0F58C98B26492559C69C8395B1FA4C2F69171E27E4872057819E
DDD0F3409F4C6081A1065192B468B588B6BB4916556446A786B66DC30FBB57A4
87B37456FD4CB9D0E370FC13F87C4AC4EA7673552C90EB971FA87911950FD65E
90E3CE3A2F684C07F2022A4F29FB80D1A2E5CD343CDDF6652C06EE776A4C6490
D1662C119B88B06E5886517E80265F10B9458B6B728730A3A930E83872D8BFAC
1B099162FCFC58DEC16E052C367ED572BC910D908F7DC81EA719C8F7EAE85CFB
D611AEEF629BEFFD5239C9CC0937BF33358AAB83198FFFB6203C5459E883149A
2D7F4F248721974FC9FFBC879A3A7321FADA299277D8D09E8CEE823865568C47
2D48F732ACEF5D27A32EB653BD28B7D731523D469488EB3E098A4AEAF3CE1FC1
5922E4C382719280134F9E2FA6C933683151661BCE7EEEDD928FF5BF82A7EF3E
7C55ADF1571BC859A9E7ADEC469994536926176A24AF1552E96E1A34A224A386
94CFCA35A6BF0FE7198031D6808C0CC9A5C860D9BDFECF42DCCD74ABAE2BFC58
A40E4B34F126E2118A27CB1A08EA368AEFA1764BED7175E9C317EF020BDA4BC2
336F30AB83C9D7B71430BB721468435C6B5D7C2441A515D15E656B7073C0EA09
1F89D671482EEA4128805C6DB77A91488388BCAA2ED53646649E08B8D69CAFF4
96686B8A97561BB49EF0CE699BE015DFCBB943D516B896CB8D26AD6629A99F4B
C054913866DC7EB06BD02348B8791A3BA33583E28912063275F9777345D1227A
3E7CA6F05BC1F543FD6F82D3897E46CF90F2461A99740F5F8672F712D3A48987
0D19B9100FBA16AC5F5B6750B83AA04007D6A004906C72CB211EF9BB5C2F4D13
A3EA8984A128FB69E8F04541EE2D0B126F6D460F913EA3EFE7EA49AABA75AEEE
7CE248972ADD8A07271FC6E2E09E499617A1D4FC467DF24905C1518667FBD793
A902716D6F0A45682E24221940A8EDB8BE48FCF1E747284FA3BB98EFC5B1C07E
AD51AF9BD5B10E023013982AB240778BEF76D1A03DFE708FC27C8D1FB68EDC86
312EA3D98C5345145BA28F2841262597D2703C54359E0B98255F64929050422F
95E30046390DB690EE7B94EF0F33855C37558C05858B6D31A42E940D93C12431
FF2740DA99544828AD17AFF3ECC9551921491EE6E03F0F179F1E80533D1425DB
0294A669190EE5E52D61236B55E760F988F37A889470400BF7B76C4086C076D3
E580B67EF0D6F948CF5561957796859B7F3CB2EA04DB17FB073F7A8526D3A2C5
228D8982FA024B2B21BC39B78C63577D176C92EC84956944276543E2018A21E6
4CDFF3D8C391A5FDDF958FC6F0D04EFFA285AF03D85BB8385F96CBF1305AF0BF
23F19D58F590ADA8CC90E1AF423FEE2C88DF8E2CE0F2BF8BF74DE0BA3CD39D0F
5D1CBCCD163D6025A7FF7DDA54946816EBEF8C84121FF66BDFBE0B4F6867377C
2B55F24313B65467E8A4A7DC64D9D6D4B571493F52BE8067AF5C8935F1FD9394
C1C7FBED6032C1D047BD0CEF169B7166EADDFE170755A778B7C41BECC62A7B0B
4ADDF24F466F87E8F1111A6C6BC699E3FB2F9124FF681A5E84D48DD65C310856
0B1B7D503C7099E45AE28D512DD5DE8BB14D62E806A6F66CCBA40425BB8C5B3A
77F664C0ACD5862980F2922F82951E189EE9C59F1D3D0D17B0B4338C9BCCF03C
EF132FF4DC3EC6A412256ECF1B45CCA55959C0E1820330F75827D456E516B723
74114CC78F1171C6BA513A3AD46143C481E13204211165B6A4F809A087EEB068
26BB6785F3CBA7ABF30CDFCBDB749C681E3D54F5EE5880A5A96C3AE18D08AB1B
6A4153676476135C0CF15D67881A9CCDF4FB85D2FAB689B29ABB1002F851669A
EDB73FDF345A1A36A553BF4CC43EDF0B3B0FC9C0DF574CDE9A9B7FB2FF0F5345
264AEB891AC6679224813056A41AAAF5E01A40AB47EA556BB27014CBCE3EC62F
FDAC1AB329A4BD3460A1C4219ECBADACC0F46E79B258D966393653B626664077
49C58A81FCACDBF714C1764383C28C9C09D72A271C235A5DE0156C7165B24626
334006ADA4E9471E29013585B0FD5ACCA9C2A86C268F45C7A8057ADE3ED0748D
56C13BDF9052F8D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 68 /D put
dup 78 /N put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91051800EE6C54285
AB0594D87D05EB4CB44FFC094DA0072AE7D4BF2F4F9BB812FED256B937BC2574
8C529F97ABAE081B0702A3349EC9A6641770F5E9F75CBD40A2C2BA1DBD67A5CF
D70BE80E6FEA2DEC57585BC12DD19303032F784B5EA8A81B9F57068AE5AC9CEE
22BFA346C4AD12C3146745B7577DD02E8A28FE69870EF411F90C418E97A0F3DD
0406AF8A1890937764300267848FE3780AA477915089273735E74F542BADE5A3
2161A9C586721F7769B0E4EC2C13DDBF578176DB6BE0384974726F029A6E70F3
F879C35820D6827897A746741E39BEA001F651B854173EE7DE928FA033CB9254
04E9DB444E43BB635BBB32EB763BEA662517617F1101067AD8E88D8FD8F3590B
0B5007BC41B3AB024D7342A6C999343D1361997B36C7272518BDD1691BAD6A63
F8BAA99F72EDAEEB736F13D3D4D59D86C63B80AD909566CAFE73A9B459B01989
CAC199B521F1CD52D2985E4E3D9B7A0B75A514CEEC0078CE9A57011AEECA7DDC
D03F559CA25C1CD81191B84714E23C6399984C861C3408B1EEB74A9E9080032C
2841326DCF1EE5417CE27FB538295364377FD2085695DF47A7BDEDF0F280507D
F3DAE69BA5A71C35B98C507A792F6A4E3A775B4C07EE4F906CF68D66021E0E4D
7EF0EAE7705A3CB5406C9CFA2ACE61CBC2593FEF5086F750BB98B9B5D3549931
12F2E2C777DAB8DCCCED53D027B2A7F9CC235BC5883114BF9ABAA561089B9406
A3E6BE7271968BFA85426504F9CDCCE4DDDDCF57A4E419E09DCDD26D16650BA8
754BF85ECE723C2F1E433DABA324646FF3E6A38BFDBB49F29BFFE2E4B180D94E
9C7F98D122B7297A1C909ADAFB485001F3EB1004D45B9DBE13E22D6AFB30879F
8C413BFC9697F82C1022A261FE6ED095446EC767
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (instances.dvi)
@start
%DVIPSBitmapFont: Fa ecrm0900 9 30
/Fa 30 122 df<00001FE0000000FFFC000003F01E00000FC00780001F800780003F000F
C0007E001FC000FC001FC000FC001FC001F8001FC001F8000F8001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F8000FC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC001F8001FC001F8000FC001F8000FC001F8
000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F800
0FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000F
C001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC0
03FC001FE07FFFC1FFFF7FFFC1FFFF7FFFC1FFFF28357FB42B>28
D<0000C00001C0000380000F00000E00001C00003C0000780000F00000F00001E00003C0
0003C00007C0000780000F80000F00001F00001F00001E00003E00003E00003E00003C00
007C00007C00007C00007C00007C0000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F800007C00007C00007C00
007C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000780
0007C00003C00003C00001E00000F00000F000007800003C00001C00000E00000F000003
800001C00000C0124A79B71E>40 D<C00000E000007000003C00001C00000E00000F0000
07800003C00003C00001E00000F00000F00000F800007800007C00003C00003E00003E00
001E00001F00001F00001F00000F00000F80000F80000F80000F80000F800007C00007C0
0007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C0000F80000F80000F80000F80000F80000F00001F00001F00001F00001E00
003E00003E00003C00007C0000780000F80000F00000F00001E00003C00003C000078000
0F00000E00001C00003C0000700000E00000C00000124A7CB71E>I<3C007E00FF00FF00
FF80FF807F803D800180018001800180038003000300070006000E000C001C0038007000
600009177A8715>44 D<3C7EFFFFFFFF7E3C08087A8715>46 D<00070000000F0000001F
0000007F000007FF0000FFFF0000FFBF0000F83F0000003F0000003F0000003F0000003F
0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F
0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F
0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F
0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000007F80007FFF
FF807FFFFF807FFFFF8019327AB126>49 D<003FC00000FFF00003FFFC000F80FF001E00
7F801C003FC038001FE070000FE070000FF0600007F0FC0007F0FE0007F8FF0007F8FF00
03F8FF0003F8FF0003F87E0007F83C0007F8000007F8000007F0000007F000000FF00000
0FE000001FC000001FC000003F8000003F0000007E000000FC000001F8000001F0000003
E0000007C000000F8000001F0000003E0000003C00000078001800F0001801E0001803C0
0030078000300F0000301C0000701FFFFFF03FFFFFF07FFFFFF0FFFFFFE0FFFFFFE0FFFF
FFE01D327CB126>I<000000E0000000000000E0000000000000E0000000000001F00000
00000001F0000000000003F8000000000003F8000000000003F8000000000007FC000000
000007FC000000000007FC00000000000DFE00000000000CFE00000000000CFE00000000
00187F0000000000187F0000000000187F0000000000303F8000000000303F8000000000
703FC000000000601FC000000000601FC000000000E01FE000000000C00FE000000000C0
0FE000000001800FF0000000018007F0000000018007F0000000030003F8000000030003
F8000000030003F8000000060001FC000000060001FC0000000E0001FE0000000FFFFFFE
0000000FFFFFFE0000001FFFFFFF0000001800007F0000001800007F0000003000007F80
00003000003F8000003000003F8000006000001FC000006000001FC000006000001FC000
00C000000FE00000C000000FE00001C000000FF00001C0000007F00003E0000007F0001F
F000000FF800FFFE0001FFFFE0FFFE0001FFFFE0FFFE0001FFFFE033367DB53A>65
D<FFFFFFFF0000FFFFFFFFE000FFFFFFFFF80003FC0003FE0001FC0000FF0001FC00007F
8001FC00003FC001FC00001FC001FC00001FE001FC00000FE001FC00000FF001FC00000F
F001FC00000FF001FC00000FF001FC00000FF001FC00000FF001FC00000FE001FC00001F
E001FC00001FC001FC00003F8001FC00007F0001FC0000FE0001FC0003FC0001FFFFFFF0
0001FFFFFFE00001FC0007FC0001FC0000FE0001FC00003F8001FC00001FC001FC00000F
E001FC00000FF001FC000007F001FC000007F801FC000003F801FC000003FC01FC000003
FC01FC000003FC01FC000003FC01FC000003FC01FC000003FC01FC000003F801FC000007
F801FC000007F801FC00000FF001FC00001FE001FC00003FE001FC00007FC003FC0003FF
00FFFFFFFFFE00FFFFFFFFF800FFFFFFFFC0002E337DB236>I<FFFFFEFFFFFEFFFFFE01
FF0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0001FF00FFFFFEFFFFFEFFFFFE17
337EB21C>73 D<007F80000003FFF000000F80FC00001C003E00003F003F00003F801F80
003F800FC0003F800FC0003F8007E0001F0007E000000007E000000007E000000007E000
000007E0000001FFE000001FFFE00000FF87E00003FC07E0000FF007E0001FC007E0003F
8007E0007F8007E0007F0007E000FF0007E0C0FE0007E0C0FE0007E0C0FE0007E0C0FE00
0FE0C0FE000FE0C0FF001FE0C07F003BE0C03F8071F1801FC1E1FF8007FFC0FF0000FE00
3C0022237DA126>97 D<03F0000000FFF0000000FFF0000000FFF000000007F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F03F
800003F0FFE00003F3C0F80003F7007E0003FE003F0003FC001F8003F8000FC003F0000F
C003F00007E003F00007F003F00007F003F00003F003F00003F803F00003F803F00003F8
03F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803
F00003F003F00007F003F00007E003F00007E003F0000FC003F8000FC003FC001F8003EC
003F0003CF007C00038381F8000301FFE00000007F000025357EB32B>I<0007F800003F
FF0000FC07C001F000E003E003F007C007F00FC007F01F8007F03F8007F03F0003E07F00
00007F0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000FE00
0000FE000000FE000000FE0000007F0000007F0000003F0000183F8000181F8000381FC0
00300FC0007007E000E003F001C000FC0F80003FFE000007F0001D237EA122>I<000000
3F0000000FFF0000000FFF0000000FFF000000007F000000003F000000003F000000003F
000000003F000000003F000000003F000000003F000000003F000000003F000000003F00
0000003F000000003F000000003F000000003F000007F03F00003FFC3F0000FC0F3F0001
F003BF0007E001FF000FC000FF001F80007F001F80003F003F00003F003F00003F007F00
003F007E00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE0000
3F00FE00003F00FE00003F00FE00003F00FE00003F007E00003F007F00003F007F00003F
003F00003F001F80007F001F80007F000FC000FF0007E001FF8003F007BFFC00F81E3FFC
003FFC3FFC000FE03F0026357DB32B>I<000FE000007FFC0000F83F0003F00F8007E00F
C00FC007E01F8003E01F8003F03F0003F03F0001F07F0001F87E0001F87E0001F8FE0001
F8FE0001F8FFFFFFF8FFFFFFF8FE000000FE000000FE000000FE000000FE0000007E0000
007F0000007F0000003F0000183F0000181F8000380F8000300FC0007007E000E001F003
C000FC0F00003FFE000007F0001D237EA122>I<0001FC000007FF00001F0780003E0FC0
007C1FC000FC1FC001F81FC001F81FC003F8070003F0000003F0000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00000FFFFF000
FFFFF000FFFFF00003F0000003F0000003F0000003F0000003F0000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00000
07F800007FFFE0007FFFE0007FFFE0001A357FB417>I<03F0000000FFF0000000FFF000
0000FFF000000007F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F01FC00003F07FF00003F1E0FC0003F3807C0003F7007E0003
FE007E0003FC003F0003FC003F0003F8003F0003F8003F0003F0003F0003F0003F0003F0
003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0007F8007F80FFFFC7FFFCFFFFC7FFFCFFFFC7FFFC26347EB32B
>104 D<07800FC01FE01FE01FE01FE00FC0078000000000000000000000000000000000
0000000007E0FFE0FFE0FFE00FE007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E00FF0FFFFFFFFFFFF1033
7EB215>I<03F0000000FFF0000000FFF0000000FFF000000007F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F003
FFE003F003FFE003F003FFE003F001FF0003F000F80003F001E00003F001C00003F00380
0003F00F000003F01C000003F038000003F070000003F0F0000003F3F8000003F7FC0000
03FEFC000003FC7E000003F87F000003F03F800003F01F800003F00FC00003F00FE00003
F007E00003F003F00003F003F80003F001F80003F000FC0003F000FE0007F800FF80FFFF
C3FFF0FFFFC3FFF0FFFFC3FFF024347EB329>107 D<07E0FFE0FFE0FFE00FE007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E00FF0FFFFFFFFFFFF10347EB315>I<03F01FE000FF0000FFF07F
F803FFC000FFF1E07C0F03E000FFF3803E1C01F00007F7003F3801F80003FE003F7001F8
0003FC001FE000FC0003FC001FE000FC0003F8001FC000FC0003F8001FC000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F000
1F8000FC0007F8003FC001FE00FFFFC7FFFE3FFFF0FFFFC7FFFE3FFFF0FFFFC7FFFE3FFF
F03C217EA041>I<03F01FC000FFF07FF000FFF1E0FC00FFF3807C0007F7007E0003FE00
7E0003FC003F0003FC003F0003F8003F0003F8003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
03F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003
F0003F0003F0003F0007F8007F80FFFFC7FFFCFFFFC7FFFCFFFFC7FFFC26217EA02B>I<
0007F00000003FFE000000FC1F800001F007C00003C001E00007C001F0000F8000F8001F
00007C001F00007C003F00007E003E00003E007E00003F007E00003F007E00003F00FE00
003F80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE0000
3F807E00003F007E00003F007E00003F003F00007E003F00007E001F00007C001F8000FC
000FC001F80007C001F00003F007E00000FC1F8000003FFE00000007F0000021237EA126
>I<03F03F8000FFF0FFE000FFF3C0F800FFF7007E0007FE003F0003FC001F8003F8001F
C003F0000FC003F0000FE003F00007F003F00007F003F00007F003F00003F803F00003F8
03F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803
F00007F803F00007F003F00007F003F00007E003F0000FE003F0000FC003F8001FC003FC
003F8003FC003F0003FF00FC0003F381F80003F1FFE00003F07F000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000007F8000000FFFFC00000FFFFC00000FFFFC0000025307EA02B>I<03E07C
00FFE1FF00FFE38F80FFE71FC007EE1FC003EC1FC003EC1FC003FC0F8003F8000003F800
0003F8000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000007F80000FFFFE000FFFFE000FFFFE0001A217FA01E>114
D<00FF060007FFCE001F00FE003C003E0078001E0078000E00F0000E00F0000600F00006
00F8000600F8000600FE000000FF8000007FFC00003FFFC0003FFFF0000FFFF80007FFFC
0000FFFE00000FFF000000FF0000003F80C0001F80C0000F80E0000780E0000780E00007
80F0000780F0000700F8000F00FC000E00FE001C00F7807800E1FFE000C07F800019237E
A11E>I<00300000300000300000300000300000700000700000700000F00000F00001F0
0001F00003F00007F0001FFFFEFFFFFEFFFFFE03F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00303F00303F0
0303F00303F00303F00303F00303F00303F00701F80601F80600FC0E007E1C001FF80007
E0182F7FAD1E>I<03F0003F00FFF00FFF00FFF00FFF00FFF00FFF0007F0007F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
03F0003F0003F0003F0003F0003F0003F0003F0003F0007F0003F0007F0003F0007F0003
F000FF0001F000FF0001F801FF8000F803BFFC007E073FFC001FFE3FFC0007F83F002622
7EA02B>I<FFFF1FFF81FFF0FFFF1FFF81FFF0FFFF1FFF81FFF007F801FC003F8007F001
F8001E0003F000F8001C0003F000FC001C0001F8007C00180001F8007C00180001FC007E
00380000FC00FE00300000FC00FE003000007E01FF006000007E019F006000007E019F80
6000003F030F80C000003F030F80C000003F030FC0C000001F8607C18000001F8607C180
00001FC607E38000000FCC03E30000000FCC03E300000007FC03F600000007F801F60000
0007F801FE00000003F000FC00000003F000FC00000003F000FC00000001E00078000000
01E0007800000001E0007800000000C00030000034217F9F37>119
D<7FFF807FF87FFF807FF87FFF807FF807F8001FC003F8000F8001F800070001F8000600
00FC000C0000FC000C0000FE001C00007E001800007E001800003F003000003F00300000
3F807000001F806000001FC0E000000FC0C000000FC0C0000007E180000007E180000007
F380000003F300000003FB00000001FE00000001FE00000000FC00000000FC00000000FC
00000000780000000078000000003000000000300000000060000000006000000000E000
000000C000000000C0000000018000007801800000FC03000000FC03000000FC06000000
FC0E000000701C00000078380000001FF00000000FC000000025307F9F29>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ecbx1200 12 16
/Fb 16 122 df<07C01FF03FF87FFCFFFEFFFEFFFEFFFEFFFEFFFEFFFE7FFC3FF81FF007
C00F0F788E1F>46 D<000003C000000007C00000001FC00000007FC0000003FFC000003F
FFC000FFFFFFC000FFFFFFC000FFFFFFC000FFFFFFC000FFC3FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003
FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC000FFFFFFFFFCFFFFFFFFFCFFFFFFFFFC
FFFFFFFFFCFFFFFFFFFC264177C038>49 D<0000FFE00000000FFFFE0000003FFFFF8000
00FFFFFFE00003FFFFFFF80007FC03FFFE000FE0007FFF001F80003FFF803F00000FFFC0
7F000007FFC07FC00007FFE07FF00003FFE0FFF00001FFF0FFF80001FFF0FFF80001FFF8
FFF80000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF87FF00000FFF83FE00000FFF8
1FC00000FFF800000000FFF800000000FFF000000001FFF000000001FFF000000001FFE0
00000003FFE000000003FFC000000007FF800000000FFF000000000FFF000000001FFC00
0000003FF8000000003FF0000000007FE000000000FFC000000001FF0000000003FE0000
000007FC000000000FF0000000001FE0000000003F80000000007F0000780000FE000078
0001FC0000780003F80000F80007E00000F0000FC00000F0001F800000F0003F000000F0
007C000001F000F8000003F001FFFFFFFFF003FFFFFFFFE007FFFFFFFFE00FFFFFFFFFE0
1FFFFFFFFFE03FFFFFFFFFE07FFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFC0FFFFFFFFFFC0
FFFFFFFFFFC0FFFFFFFFFFC02D417BC038>I<000000001F8000000000000000001F8000
000000000000003FC000000000000000003FC000000000000000007FE000000000000000
007FE000000000000000007FE00000000000000000FFF00000000000000000FFF0000000
0000000001FFF80000000000000001FFF80000000000000001FFF80000000000000003FF
FC0000000000000003FFFC0000000000000007FFFE0000000000000007FFFE0000000000
000007FFFE000000000000000FFFFF000000000000000F9FFF000000000000001F9FFF80
0000000000001F1FFF800000000000001F0FFF800000000000003F0FFFC0000000000000
3E07FFC00000000000007E07FFE00000000000007C07FFE00000000000007C03FFE00000
00000000FC03FFF0000000000000F801FFF0000000000001F801FFF8000000000001F001
FFF8000000000001F000FFF8000000000003F000FFFC000000000003E0007FFC00000000
0007E0007FFE000000000007C0007FFE000000000007C0003FFE00000000000FC0003FFF
00000000000F80001FFF00000000001F80001FFF80000000001F00000FFF80000000001F
00000FFF80000000003F00000FFFC0000000003E000007FFC0000000007E000007FFE000
0000007FFFFFFFFFE0000000007FFFFFFFFFE000000000FFFFFFFFFFF000000000FFFFFF
FFFFF000000001FFFFFFFFFFF800000001F0000000FFF800000001F0000000FFF8000000
03F0000000FFFC00000003E00000007FFC00000007E00000007FFE00000007C00000003F
FE00000007C00000003FFE0000000F800000003FFF0000000F800000001FFF0000001F80
0000001FFF8000001F000000000FFF8000003F000000000FFFC000003E000000000FFFC0
00007E0000000007FFC000FFFFFF00000FFFFFFFF0FFFFFF00000FFFFFFFF0FFFFFF0000
0FFFFFFFF0FFFFFF00000FFFFFFFF0FFFFFF00000FFFFFFFF04C457CC455>65
D<FFFFFFFFFFF800000000FFFFFFFFFFFFC0000000FFFFFFFFFFFFF8000000FFFFFFFFFF
FFFE000000FFFFFFFFFFFFFF800000001FFF00003FFFE00000001FFF000003FFF0000000
1FFF000000FFF80000001FFF0000007FFC0000001FFF0000003FFE0000001FFF0000001F
FF0000001FFF0000001FFF0000001FFF0000001FFF8000001FFF0000000FFF8000001FFF
0000000FFF8000001FFF0000000FFFC000001FFF0000000FFFC000001FFF0000000FFFC0
00001FFF0000000FFFC000001FFF0000000FFFC000001FFF0000000FFFC000001FFF0000
000FFFC000001FFF0000000FFF8000001FFF0000000FFF8000001FFF0000001FFF000000
1FFF0000001FFF0000001FFF0000003FFE0000001FFF0000003FFC0000001FFF0000007F
FC0000001FFF000001FFF00000001FFF000007FFE00000001FFF00003FFF800000001FFF
FFFFFFFF000000001FFFFFFFFFF8000000001FFFFFFFFFE0000000001FFFFFFFFFF80000
00001FFF0000FFFC000000001FFF00003FFF000000001FFF00000FFF800000001FFF0000
07FFC00000001FFF000003FFE00000001FFF000003FFE00000001FFF000001FFF0000000
1FFF000001FFF00000001FFF000000FFF80000001FFF000000FFF80000001FFF000000FF
F80000001FFF000000FFF80000001FFF000000FFF80000001FFF000000FFF80000001FFF
000000FFF80000001FFF000000FFFC0000001FFF000000FFFC0000001FFF000000FFFC00
00001FFF000000FFFC0000001FFF000000FFFC0000001FFF000000FFFC0000001FFF0000
00FFFC000F001FFF000000FFFE000F001FFF000000FFFE000F001FFF0000007FFE000F00
1FFF0000007FFF001F001FFF0000003FFF001EFFFFFFFFE0001FFF803EFFFFFFFFE0000F
FFE0FCFFFFFFFFE00007FFFFF8FFFFFFFFE00001FFFFF0FFFFFFFFE000007FFFE0000000
0000000007FF8050457DC354>82 D<0001FFE0000000001FFFFE000000007FFFFF800000
01FFFFFFE0000003FE007FF8000007FC001FFC000007FE000FFE00000FFF0007FF00000F
FF0007FF00000FFF0003FF80000FFF0003FF80000FFF0003FF80000FFF0001FFC00007FE
0001FFC00003FC0001FFC00000F00001FFC00000000001FFC00000000001FFC000000000
01FFC00000000001FFC000000003FFFFC0000000FFFFFFC0000007FFFFFFC000003FFFF1
FFC00000FFFC01FFC00003FFE001FFC00007FF8001FFC0001FFE0001FFC0003FFC0001FF
C0003FF80001FFC0007FF80001FFC0007FF00001FFC000FFF00001FFC000FFE00001FFC0
00FFE00001FFC000FFE00001FFC000FFE00003FFC000FFE00003FFC000FFF00007FFC000
7FF8000FFFC0007FF8001FFFF0003FFE003EFFFFC01FFF80FC7FFFC007FFFFF87FFFC003
FFFFE01FFFC0007FFF8007FFC0000FFC00000000322F7DAD36>97
D<00003FFC00000001FFFFC000000FFFFFF000003FFFFFFC00007FF003FE0000FFC001FF
0003FF8003FF0007FF0007FF8007FE0007FF800FFE0007FF801FFC0007FF801FFC0007FF
803FF80007FF803FF80003FF007FF80001FE007FF8000078007FF0000000007FF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
007FF8000000007FF8000000007FF8000000003FF8000000003FFC000003C03FFC000003
C01FFE000007C00FFE000007800FFF00000F8007FF80001F0003FFC0003E0001FFF0007C
00007FFC03F800003FFFFFF000000FFFFFC0000003FFFF000000003FF800002A2F7CAD32
>99 D<00003FF800000003FFFF8000000FFFFFE000003FFFFFF000007FF83FF80000FFC0
07FC0001FF8003FE0003FF0001FF0007FE0000FF800FFC0000FF801FFC00007FC01FF800
007FC03FF800003FE03FF800003FE07FF800003FE07FF000003FE07FF000003FF07FF000
001FF0FFF000001FF0FFF000001FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFF
FFFFF0FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000007FF000
0000007FF0000000007FF8000000007FF8000000003FF8000000003FF8000000F01FFC00
0000F01FFC000001F00FFE000001E007FF000003E003FF800007C001FFC0000F8000FFF0
003F00007FFE01FE00001FFFFFFC000007FFFFF0000001FFFFC00000001FFE00002C2F7D
AD33>101 D<007C0001FF0003FF8007FFC007FFC00FFFE00FFFE00FFFE00FFFE00FFFE0
07FFC007FFC003FF8001FF00007C00000000000000000000000000000000000000000000
000000000000000000007FC07FFFC07FFFC07FFFC07FFFC07FFFC003FFC001FFC001FFC0
01FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC0
01FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC0
01FFC001FFC001FFC001FFC001FFC001FFC001FFC0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
18467CC520>105 D<007FC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC00003FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC000FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF8019457C
C420>108 D<007F8007FE0000FFFF803FFF8000FFFF80FFFFE000FFFF81FFFFF800FFFF
87F03FFC00FFFF8F801FFC0003FF9F000FFE0001FF9E000FFE0001FFBC000FFE0001FFF8
0007FF0001FFF00007FF0001FFF00007FF0001FFE00007FF0001FFE00007FF0001FFE000
07FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00FFFF
FF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFE372D7C
AC3E>110 D<00001FFC0000000001FFFFC000000007FFFFF00000001FFFFFFC0000007F
F80FFF000000FFC001FF800001FF8000FFC00003FE00003FE00007FE00003FF0000FFC00
001FF8000FF800000FF8001FF800000FFC001FF800000FFC003FF800000FFE003FF00000
07FE007FF0000007FF007FF0000007FF007FF0000007FF007FF0000007FF00FFF0000007
FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF
80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF807FF0000007FF00
7FF0000007FF007FF0000007FF007FF0000007FF003FF800000FFE003FF800000FFE001F
F800000FFC001FFC00001FFC000FFC00001FF80007FE00003FF00007FE00003FF00003FF
8000FFE00001FFC001FFC000007FF80FFF0000003FFFFFFE0000000FFFFFF800000001FF
FFC0000000001FFC000000312F7DAD38>I<007F807F00FFFF81FFE0FFFF83FFF0FFFF8F
FFF8FFFF8F8FFCFFFF9F1FFE03FFBE1FFE01FFBC1FFE01FFF81FFE01FFF81FFE01FFF01F
FE01FFF00FFC01FFE007F801FFE001E001FFE0000001FFE0000001FFE0000001FFC00000
01FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001
FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FF
C0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0
0000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000272D7DAC2E>114
D<001FFC038000FFFF878003FFFFFF800FFFFFFF801FF003FF803FC000FF803F80003F80
7F00001F807E00001F80FE00000F80FE00000F80FE00000780FF00000780FF00000780FF
80000780FFE0000000FFFE0000007FFFF000007FFFFF00003FFFFFC0003FFFFFF0001FFF
FFFC000FFFFFFE0003FFFFFF0001FFFFFF80007FFFFF80000FFFFFC000003FFFC0000003
FFE0000000FFE0F000003FE0F000003FE0F800001FE0F800000FE0F800000FE0FC00000F
E0FC00000FE0FE00000FC0FF00001FC0FF00001FC0FF80003F80FFE0007F00FFF803FE00
FFFFFFFC00FCFFFFF800F03FFFE000E007FE0000232F7CAD2C>I<0001E000000001E000
000001E000000001E000000001E000000003E000000003E000000003E000000003E00000
0007E000000007E00000000FE00000000FE00000001FE00000001FE00000003FE0000000
7FE0000000FFE0000003FFE000000FFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFF
FFFF8000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE00000
00FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000
FFE001E000FFE001E000FFE003E000FFF003C0007FF003C0007FF007C0003FF80F80001F
FC1F00000FFFFF000007FFFC000001FFF80000003FE00023407EBE2C>I<FFFFFF0003FF
FCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFC01FFE000003E00
00FFE000003C0000FFF000003C00007FF000007800007FF800007800007FF80000F80000
3FF80000F000003FFC0001F000001FFC0001E000001FFE0003E000000FFE0003C000000F
FF0007C0000007FF000780000007FF800F80000003FF800F00000003FFC00F00000003FF
C01F00000001FFE01E00000001FFE03E00000000FFE03C00000000FFF07C000000007FF0
78000000007FF8F8000000003FF8F0000000003FFDF0000000001FFDE0000000001FFFE0
000000000FFFC0000000000FFFC0000000000FFFC00000000007FF800000000007FF8000
00000003FF000000000003FF000000000001FE000000000001FE000000000000FC000000
000000FC0000000000007800000000000078000000000000F8000000000000F000000000
0001F0000000000001E00000001F0003E00000003F8003C00000007FC007C0000000FFE0
0780000000FFE00F80000000FFE00F00000000FFE01F00000000FFE03E00000000FFC07C
000000007FC1F8000000007F07F0000000003FFFE0000000001FFFC00000000007FF0000
00000001FC000000000036407EAB3B>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ecrm0800 8 2
/Fc 2 51 df<000C00003C00007C0003FC00FFFC00FC7C00007C00007C00007C00007C00
007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00
007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00
007C00007C00007C00007C00007C00007C00007C0000FE007FFFFE7FFFFE172C7AAB23>
49 D<007F800001FFF0000780FC000E003F001C001F8038000FC070000FC0600007E0F0
0007E0FC0007F0FE0007F0FE0003F0FE0003F0FE0003F07C0007F0000007F0000007F000
0007E000000FE000000FC000001FC000001F8000003F0000007E0000007C000000F80000
01F0000003E0000007C000000F8000001E0000003C00000078000000F0003000E0003001
C0003003800060070000600E0000E01FFFFFE03FFFFFE07FFFFFC0FFFFFFC0FFFFFFC01C
2C7DAB23>I E
%EndDVIPSBitmapFont
/Fd 216[71 39[{}1 90.9091 /CMSY10 rf /Fe 200[45 1[45
2[45 45 45 10[76 37[{}6 90.9091 /CMR10 rf /Ff 177[73
9[75 9[25 58[{}3 90.9091 /CMMI10 rf
%DVIPSBitmapFont: Fg ecrm1095 10.95 59
/Fg 59 123 df<FFFFFFFFFFF0FFFFFFFFFFF02C0280982D>21 D<000003FF000FE00000
1FFFC07FF80000FE00F1F81C0001F8003BE07E0007E0007FC0FF000FC001FFC0FF001F80
01FF80FF003F0001FF00FF007F0001FF00FF007E0001FF007E00FE0000FE000000FC0000
7E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E
000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E00
0000FC00007E000000FC00007E000000FC00007E0000FFFFFFFFFFFF80FFFFFFFFFFFF80
FFFFFFFFFFFF8000FC00007E000000FC00007E000000FC00007E000000FC00007E000000
FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC
00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00
007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC0000
7E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E
000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E00
0000FC00007E000000FC00007E000001FE0000FF00007FFFF83FFFFF007FFFF83FFFFF00
7FFFF83FFFFF0038407FBF35>27 D<000003FE000000001FFFC0000000FE01E0000001F8
0078000007E0001C00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E00
01FE0000FE0001FE0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC00
00000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00
00000000FC0000000000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFF
FFFE0000FC0001FE0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00
007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00
007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00
007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00
007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00
007E0000FC00007E0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF8
3FFFFC2E407FBF32>I<000003FF000000001FFFEE000000FE00FE000001F800FE000007
E001FE00000FC001FE00001F8001FE00003F0001FE00007F0001FE00007E0000FE0000FE
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC
00007E0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E40
7FBF32>I<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C000C001C001
80018003800300070006000E000C001C003800700060000A1B78BE19>39
D<0000300000700000E00001C0000380000700000F00001E00003C00003C0000780000F0
0000F00001E00001E00003C00003C00007C0000780000F80000F80000F00001F00001F00
001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00007C00007800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F800007800007C00007C00007C00007C00007C00
007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000F80000780
0007C00003C00003C00001E00001E00000F00000F000007800003C00003C00001E00000F
000007000003800001C00000E0000070000030145A77C323>I<C00000E0000070000038
00001C00000E00000F000007800003C00003C00001E00000F00000F00000780000780000
3C00003C00003E00001E00001F00001F00000F00000F80000F800007800007C00007C000
07C00003C00003E00003E00003E00003E00003E00003E00001E00001F00001F00001F000
01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F000
01F00001F00001F00001E00003E00003E00003E00003E00003E00003E00003C00007C000
07C00007C0000780000F80000F80000F00001F00001F00001E00003E00003C00003C0000
780000780000F00000F00001E00003C00003C0000780000F00000E00001C000038000070
0000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000
C000C000C000C001C00180018003800300070006000E000C001C003800700060000A1B78
8819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E>I<1C007F00FF80FF80FF
80FF80FF807F001C000909788819>I<00000000C000000000C000000001C00000000180
0000000180000000038000000003000000000700000000060000000006000000000E0000
00000C000000000C000000001C0000000018000000001800000000380000000030000000
00300000000070000000006000000000E000000000C000000000C000000001C000000001
800000000180000000038000000003000000000300000000070000000006000000000E00
0000000C000000000C000000001C00000000180000000018000000003800000000300000
00003000000000700000000060000000006000000000E000000000C000000001C0000000
018000000001800000000380000000030000000003000000000700000000060000000006
000000000E000000000C000000000C000000001C00000000180000000038000000003000
0000003000000000700000000060000000006000000000E000000000C000000000C00000
0001C0000000018000000003800000000300000000030000000007000000000600000000
06000000000E000000000C000000000C000000001C000000001800000000180000000038
000000003000000000700000000060000000006000000000E000000000C000000000C000
000000225B7BC32D>I<0003FC0000001FFF8000003E07C00000F801F00001F000F80003
E0007C0003C0003C0007C0003E000F80001F000F80001F001F00000F801F00000F803F00
000FC03F00000FC03F00000FC03F00000FC07E000007E07E000007E07E000007E07E0000
07E07E000007E0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0
FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE
000007F07E000007E07E000007E07E000007E07E000007E07F00000FE03F00000FC03F00
000FC03F00000FC03F00000FC01F00000F801F80001F800F80001F000F80001F0007C000
3E0007C0003E0003E0007C0001F000F80000F801F000003E07C000001FFF80000003FC00
00243F7CBC2D>I<0000C0000003C0000007C000001FC000007FC00007FFC000FFFFC000
FF9FC000F81FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000007FF000FFFFFFF8FFFFFFF8FFFFFFF8
1D3D78BC2D>I<0007FC0000003FFF800000FFFFE00001F00FF800078003FC000F0001FE
000E0000FF001C00007F803800003FC03000003FC07000001FE06000001FE06000001FE0
FE00000FF0FF00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF07F
00000FF01C00000FF00000000FE00000001FE00000001FE00000001FC00000003FC00000
003F800000007F800000007F00000000FE00000001FC00000001FC00000003F800000007
F00000000FE00000000FC00000001F800000003E000000007C00000000F800000001F000
000003E000000003C000000007800000000F000030001E000030003C0000300078000030
00F000006001E000006003C0000060078000006007000000E00FFFFFFFE01FFFFFFFE03F
FFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0243D7CBC2D>I<0000000E00
0000000E000000001E000000003E000000003E000000007E00000000FE00000000FE0000
0001FE00000003FE00000003FE00000006FE0000000EFE0000000CFE00000018FE000000
38FE00000030FE00000060FE000000E0FE000000C0FE00000180FE00000380FE00000300
FE00000600FE00000E00FE00000C00FE00001800FE00003800FE00003000FE00006000FE
0000E000FE0000C000FE00018000FE00038000FE00030000FE00060000FE000E0000FE00
0C0000FE00180000FE00380000FE00300000FE00600000FE00E00000FE00FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF000000FE00000000FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000001
FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD2D>52 D<060000030007C0000F0007
F800FE0007FFFFFC0007FFFFFC0007FFFFF00007FFFFE00007FFFFC00007FFFF0000063F
F80000060000000006000000000600000000060000000006000000000600000000060000
00000600000000060000000006000000000600000000060000000006000000000601FE00
00060FFF8000063E03E000067001F80006E000FC0007C0007E000780003F000700003F80
0600001F800000001FC00000001FC00000001FE00000000FE00000000FE00000000FE000
00000FF00000000FF00000000FF00000000FF03E00000FF07F00000FF0FF80000FF0FF80
000FF0FF80000FF0FF80000FF0FF00000FE0FE00001FE0E000001FE06000001FC0700000
1FC03000003F803800003F801C00007F001E0000FE000F0001FC0007C003F80003F00FE0
0000FFFFC000003FFF00000007F80000243F7CBC2D>I<00001FE0000000FFF8000003FF
FE00000FF01F00001F800780003F000380007E000FC000FC001FC001F8003FC003F0003F
C003F0003FC007E0003FC00FE0001F800FC0000F001FC00000001FC00000001F80000000
3F800000003F800000003F800000007F800000007F000000007F01FE00007F07FF8000FF
0E03E000FF1C01F000FF3800FC00FF70007E00FF60003E00FFE0003F00FFC0001F80FFC0
001FC0FF80001FC0FF80001FE0FF80000FE0FF80000FE0FF00000FF0FF00000FF0FF0000
0FF0FF00000FF0FF00000FF0FF00000FF07F00000FF07F00000FF07F00000FF07F00000F
F07F00000FF03F80000FF03F80000FE03F80000FE01F80000FE01F80001FC01FC0001FC0
0FC0001F800FC0003F8007E0003F0003F0007E0001F800FC0000FC01F800007E07F00000
3FFFE000000FFF80000003FC0000243F7CBC2D>I<300000000038000000003E00000000
3FFFFFFFFC3FFFFFFFFC3FFFFFFFFC3FFFFFFFF87FFFFFFFF87FFFFFFFF07FFFFFFFE070
000000E060000001C0600000038060000003006000000700C000000E00C000000C00C000
001C00C00000380000000030000000007000000000E000000001C0000000018000000003
80000000070000000007000000000E000000000E000000001C000000001C000000003C00
000000380000000078000000007800000000F800000000F000000001F000000001F00000
0001F000000003F000000003F000000003F000000007F000000007E000000007E0000000
07E00000000FE00000000FE00000000FE00000000FE00000000FE00000001FE00000001F
E00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0
0000001FE00000000FC00000000780000026407BBD2D>I<1C007F00FF80FF80FF80FF80
FF807F001C00000000000000000000000000000000000000000000000000000000000000
0000000000000000000000001C007F00FF80FF80FF80FF80FF807F001C00092778A619>
58 D<0000000700000000000000070000000000000007000000000000000F8000000000
00000F800000000000001FC00000000000001FC00000000000001FC00000000000003FE0
0000000000003FE00000000000003FE00000000000007FF00000000000006FF000000000
00006FF0000000000000CFF8000000000000C7F8000000000000C7F800000000000187FC
00000000000183FC00000000000183FC00000000000301FE00000000000301FE00000000
000301FE00000000000600FF00000000000600FF00000000000E00FF80000000000C007F
80000000000C007F80000000001C007FC00000000018003FC00000000018003FC0000000
0030003FE00000000030001FE00000000030001FE00000000060001FF00000000060000F
F00000000060000FF000000000C00007F800000000C00007F800000000C00007F8000000
01800003FC00000001FFFFFFFC00000003FFFFFFFE00000003FFFFFFFE00000003000001
FE00000007000001FF00000006000000FF00000006000000FF0000000C000000FF800000
0C0000007F8000000C0000007F800000180000007FC00000180000003FC0000018000000
3FC00000300000001FE00000300000001FE00000700000001FE00000700000000FF00000
F00000000FF00001F00000000FF80003F80000000FF8000FFE0000003FFE00FFFFC00007
FFFFF8FFFFC00007FFFFF8FFFFC00007FFFFF83D417DC044>65 D<FFFFFFFFFC0000FFFF
FFFFFFC000FFFFFFFFFFF00000FFC0000FFC00007F800003FE00007F800000FF00007F80
00007F80007F8000003FC0007F8000003FE0007F8000001FE0007F8000001FF0007F8000
000FF0007F8000000FF8007F8000000FF8007F8000000FF8007F8000000FF8007F800000
0FF8007F8000000FF8007F8000000FF8007F8000000FF0007F8000001FF0007F8000001F
E0007F8000003FE0007F8000003FC0007F8000007F80007F800000FF00007F800003FE00
007F80000FF800007F80007FE000007FFFFFFF0000007FFFFFFFE000007F800003FC0000
7F800000FE00007F8000007F80007F8000003FC0007F8000001FE0007F8000000FF0007F
8000000FF8007F80000007F8007F80000007FC007F80000003FC007F80000003FC007F80
000003FE007F80000003FE007F80000003FE007F80000003FE007F80000003FE007F8000
0003FE007F80000003FE007F80000003FC007F80000007FC007F80000007FC007F800000
0FF8007F8000000FF0007F8000001FF0007F8000003FE0007F8000007FC0007F800001FF
8000FFC0000FFE00FFFFFFFFFFFC00FFFFFFFFFFE000FFFFFFFFFF0000373E7DBD40>I<
FFFFFFFFFC000000FFFFFFFFFF800000FFFFFFFFFFE0000000FFC0001FF80000007F8000
03FE0000007F800000FF0000007F8000003F8000007F8000001FC000007F8000000FE000
007F80000007F000007F80000003F800007F80000001FC00007F80000001FC00007F8000
0000FE00007F80000000FF00007F800000007F00007F800000007F80007F800000003F80
007F800000003FC0007F800000003FC0007F800000003FC0007F800000003FE0007F8000
00001FE0007F800000001FE0007F800000001FE0007F800000001FE0007F800000001FF0
007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F8000
00001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0
007F800000001FF0007F800000001FE0007F800000001FE0007F800000001FE0007F8000
00001FE0007F800000003FE0007F800000003FC0007F800000003FC0007F800000003F80
007F800000007F80007F800000007F80007F800000007F00007F80000000FE00007F8000
0000FE00007F80000001FC00007F80000003F800007F80000007F800007F8000000FF000
007F8000001FE000007F8000003FC000007F800000FF0000007F800003FE000000FFC000
1FF80000FFFFFFFFFFF00000FFFFFFFFFF800000FFFFFFFFFC0000003C3E7DBD45>68
D<FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC000FFC00001FFC0007F8000001FC0
007F8000000FE0007F80000003E0007F80000003E0007F80000001E0007F80000000E000
7F80000000E0007F80000000E0007F8000000060007F8000000060007F8000000060007F
8000000060007F8000000030007F8000300030007F8000300030007F8000300030007F80
00300030007F8000300000007F8000300000007F8000700000007F8000700000007F8000
F00000007F8001F00000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF0
0000007F8007F00000007F8001F00000007F8000F00000007F8000700000007F80007000
00007F8000300000007F8000300000007F8000300006007F8000300006007F8000300006
007F800030000C007F800000000C007F800000000C007F800000000C007F800000000C00
7F800000001C007F8000000018007F8000000018007F8000000038007F8000000038007F
8000000078007F8000000078007F80000000F0007F80000001F0007F80000003F0007F80
000007F0007F8000001FF000FFC00001FFF0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFF
FFFFE0373E7DBD3D>I<FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFFFFF800FF
C000001FF800007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007FFFFFFFFFF000007FFFFFFFFFF000007F
FFFFFFFFF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF00000FFC000001FF800FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFF
FFF83D3E7DBD44>72 D<FFFFFFC0FFFFFFC0FFFFFFC001FFE000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F800001FFE000FFFFFFC0FFFF
FFC0FFFFFFC01A3E7DBD21>I<FFFF80000000001FFFF0FFFFC0000000003FFFF0FFFFC0
000000003FFFF000FFC0000000003FF000006FE0000000006FE000006FE0000000006FE0
000067F000000000CFE0000067F000000000CFE0000067F000000000CFE0000063F80000
00018FE0000063F8000000018FE0000061FC000000030FE0000061FC000000030FE00000
61FC000000030FE0000060FE000000060FE0000060FE000000060FE00000607F0000000C
0FE00000607F0000000C0FE00000607F0000000C0FE00000603F800000180FE00000603F
800000180FE00000603F800000180FE00000601FC00000300FE00000601FC00000300FE0
0000600FE00000600FE00000600FE00000600FE00000600FE00000600FE000006007F000
00C00FE000006007F00000C00FE000006003F80001800FE000006003F80001800FE00000
6003F80001800FE000006001FC0003000FE000006001FC0003000FE000006000FE000600
0FE000006000FE0006000FE000006000FE0006000FE0000060007F000C000FE000006000
7F000C000FE0000060003F8018000FE0000060003F8018000FE0000060003F8018000FE0
000060001FC030000FE0000060001FC030000FE0000060000FE060000FE0000060000FE0
60000FE0000060000FE060000FE00000600007F0C0000FE00000600007F0C0000FE00000
600003F980000FE00000600003F980000FE00000600003F980000FE00000600001FF0000
0FE00000600001FF00000FE00000600000FE00000FE00000600000FE00000FE00000F000
00FE00000FE00001F800007C00000FE00007FE00007C00001FF000FFFFF00038001FFFFF
F0FFFFF00038001FFFFFF0FFFFF00038001FFFFFF04C3E7DBD53>77
D<FFFF8000007FFFF8FFFFC000007FFFF8FFFFE000007FFFF8007FE0000003FF00007FF0
000000FC00006FF80000007800006FFC00000030000067FC00000030000063FE00000030
000063FF00000030000061FF00000030000060FF800000300000607FC00000300000607F
C00000300000603FE00000300000601FF00000300000601FF00000300000600FF8000030
00006007FC00003000006007FC00003000006003FE00003000006001FF00003000006001
FF00003000006000FF800030000060007FC00030000060007FE00030000060003FE00030
000060001FF00030000060001FF80030000060000FF800300000600007FC003000006000
07FE00300000600003FE00300000600001FF00300000600000FF80300000600000FF8030
00006000007FC03000006000003FE03000006000003FE03000006000001FF03000006000
000FF83000006000000FF830000060000007FC30000060000003FE30000060000003FE30
000060000001FF30000060000000FFB0000060000000FFF00000600000007FF000006000
00003FF00000600000003FF00000600000001FF00000600000000FF000006000000007F0
00006000000007F000006000000003F00000F000000001F00001F800000001F00007FE00
000000F000FFFFF00000007000FFFFF00000007000FFFFF000000030003D3E7DBD44>I<
000000FFE0000000000007FFFC00000000003FC07F8000000000FE000FE000000001F800
03F000000007E00000FC0000000FC000007E0000001F8000003F0000003F0000001F8000
007E0000000FC00000FE0000000FE00001FC00000007F00003F800000003F80003F80000
0003F80007F000000001FC0007F000000001FC000FE000000000FE001FE000000000FF00
1FE000000000FF001FC0000000007F003FC0000000007F803FC0000000007F803FC00000
00007F807FC0000000007FC07F80000000003FC07F80000000003FC07F80000000003FC0
FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF800000
00003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0
FF80000000003FE0FF80000000003FE0FF80000000003FE07F80000000003FC07FC00000
00007FC07FC0000000007FC07FC0000000007FC07FC0000000007FC03FC0000000007F80
3FE000000000FF801FE000000000FF001FE000000000FF001FE000000000FF000FF00000
0001FE000FF000000001FE0007F800000003FC0003F800000003F80003FC00000007F800
01FC00000007F00000FE0000000FE000007F0000001FC000003F8000003F8000001F8000
003F0000000FE00000FE00000007F00001FC00000001F80003F000000000FE000FE00000
00003FC07F800000000007FFFC000000000000FFE00000003B427BBF46>I<FFFFFFFFF0
0000FFFFFFFFFF0000FFFFFFFFFFC00000FFC0003FF000007F800007F800007F800001FE
00007F800000FF00007F8000007F00007F8000007F80007F8000003FC0007F8000003FC0
007F8000001FE0007F8000001FE0007F8000001FF0007F8000001FF0007F8000001FF000
7F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F
8000001FE0007F8000001FE0007F8000003FC0007F8000003FC0007F8000007F80007F80
00007F00007F800000FE00007F800003FC00007F800007F800007F80003FE000007FFFFF
FF8000007FFFFFFC0000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
800000000000FFC000000000FFFFFFC0000000FFFFFFC0000000FFFFFFC0000000343E7D
BD3D>I<0007FC0018003FFF803800FFFFE03801FC03F87803F0007C7807C0001EF80F80
000FF81F000007F83F000003F83E000001F87E000000F87E000000F87C00000078FC0000
0078FC00000078FC00000038FC00000038FC00000038FE00000018FE00000018FF000000
18FF000000187F800000007FC00000007FE00000003FF80000003FFF0000001FFFF00000
0FFFFF00000FFFFFF00007FFFFFC0001FFFFFE0000FFFFFF80003FFFFFC00007FFFFE000
007FFFE0000007FFF00000007FF80000001FF80000000FFC00000007FC00000003FC0000
0001FE00000001FEC0000000FEC0000000FEC0000000FEC00000007EC00000007EE00000
007EE00000007EE00000007EE00000007CF00000007CF0000000FCF8000000F8FC000001
F8FE000001F0FF000003F0FF800007E0FBE0000FC0F1F8001F80F07F007F00E01FFFFC00
E007FFF000C0007FC00027427BBF32>83 D<3FFFFFFFFFFFFF003FFFFFFFFFFFFF003FFF
FFFFFFFFFF003FE000FFC001FF003F00007F80003F007E00007F80001F807C00007F8000
0F807800007F800007807000007F800003807000007F800003807000007F800003806000
007F800001806000007F800001806000007F800001806000007F800001806000007F8000
0180C000007F800000C0C000007F800000C0C000007F800000C0C000007F800000C0C000
007F800000C00000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F80000000000000FFC0000000000001FFE00000000007FFFFFFF800000007FFFFFFF8
00000007FFFFFFF800003A3E7DBD41>I<FFFFFE003FFFFF8001FFFFFFFFFE003FFFFF80
01FFFFFFFFFE003FFFFF8001FFFF07FFC00001FFF000003FF803FF0000007FC000000FE0
01FF0000007FC0000007C001FF0000003FC00000038000FF0000003FC00000030000FF00
00003FC00000030000FF8000001FE000000700007F8000001FE000000600007F8000001F
E000000600007FC000003FF000000600003FC000003FF000000C00003FC000003FF00000
0C00003FE000007FF800000C00001FE0000067F800001800001FE0000067F80000180000
1FE00000E7FC00001800000FF00000C3FC00003000000FF00000C3FC00003000000FF000
01C3FE000030000007F8000181FE000060000007F8000181FE000060000007F8000181FF
000060000003FC000300FF0000C0000003FC000300FF0000C0000003FC000300FF0000C0
000001FE0006007F800180000001FE0006007F800180000001FE0006007F800180000001
FF000C003FC00380000000FF000C003FC00300000000FF000C003FC00300000000FF8018
001FE007000000007F8018001FE006000000007F8018001FE006000000007FC030000FF0
06000000003FC030000FF00C000000003FC030000FF00C000000003FE070000FF80C0000
00001FE0600007F818000000001FE0600007F818000000001FE0E00007FC18000000000F
F0C00003FC30000000000FF0C00003FC30000000000FF1C00003FE300000000007F98000
01FE600000000007F9800001FE600000000007F9800001FF600000000003FF000000FFC0
0000000003FF000000FFC00000000003FF000000FFC00000000001FE0000007F80000000
0001FE0000007F800000000001FE0000007F800000000001FC0000003F800000000000FC
0000003F000000000000FC0000003F000000000000F80000001F00000000000078000000
1E000000000000780000001E000000000000700000000E000000000000300000000C0000
0058407EBD5D>87 D<7FFFFFFFFFFFFCFFFFFFFFFFFFFEFFFFFFFFFFFFFE7FFFFFFFFFFF
FC3704796E46>95 D<001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F00
03F0003F8001F8003FC000FC003FC000FC003FC000FC003FC0007E001F80007E000F0000
7E000000007E000000007E000000007E000000007E0000001FFE000003FFFE00001FF87E
00007F807E0001FC007E0007F0007E000FE0007E001FC0007E003F80007E007F80007E00
7F00007E007F00007E03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE
0001FE037F0001BE037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003F
C003E0282A7CA82D>97 D<01F800000000FFF800000000FFF800000000FFF80000000007
F80000000003F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F807F8000001F81FFF000001F8780FC00001F9E003F00001FB8001F80001
FF0000FC0001FE00007E0001FC00003F0001FC00001F8001F800001F8001F800001FC001
F800000FC001F800000FE001F800000FE001F8000007E001F8000007F001F8000007F001
F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001
F8000007F001F8000007F001F8000007E001F800000FE001F800000FE001F800000FE001
F800000FC001F800001FC001F800001F8001FC00003F0001FE00003F0001F600007E0001
F70000FC0001E38001F80001C1C003E00001C0F81F800001803FFE0000000007F000002C
407EBE32>I<0001FF0000000FFFE000003F00F800007C001E0001F800070003F0001F00
07E0003F800FC0007F800FC0007F801F80007F801F80007F803F00003F003F00001E007F
000000007F000000007E00000000FE00000000FE00000000FE00000000FE00000000FE00
000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007F0000
00007F000000007F000000003F000000C03F800000C01F800001C01FC00001800FC00003
8007E000070003F000060001F8001E0000FC003800003F01F000000FFFC0000001FE0000
222A7DA828>I<00000001F800000000FFF800000000FFF800000000FFF80000000007F8
0000000003F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
000000FF01F8000007FFC1F800001F80F1F800007C0039F80001F8001DF80003F0000FF8
0007E00007F8000FC00003F8000FC00003F8001F800001F8003F800001F8003F000001F8
007F000001F8007F000001F8007F000001F8007E000001F800FE000001F800FE000001F8
00FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F8
00FE000001F800FE000001F8007E000001F8007F000001F8007F000001F8003F000001F8
003F800001F8001F800003F8001F800003F8000FC00007F80007E0000FF80003F0000DFC
0001F8003DFE0000FC0071FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32
>I<0003FC0000001FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E
000FC0003F001F80001F001F80001F803F00001F803F00000F807F00000F807F00000FC0
7E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE
00000000FE00000000FE00000000FE00000000FE000000007E000000007F000000007F00
0000007F000000003F000000C03F800000C01F800001C00FC00001800FC000038007E000
070003F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE0000222A7DA8
28>I<00001FC00000FFF00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE00
7E01FE007E00FC00FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0000FFFFFF00FF
FFFF00FFFFFF0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000001FE00007FFFFE007F
FFFE007FFFFE001F407FBF1C>I<000000007E000003FC01FF00000FFF078780003E07CE
0F8000FC03FC0F8001F801F80F8003F000FC070003E0007C000007E0007E000007E0007E
00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F
00000FC0003F00000FC0003F000007E0007E000007E0007E000003E0007C000003F000FC
000001F801F8000001FC03F0000001BE07C00000038FFF0000000303FC00000007000000
000007000000000007000000000007000000000007800000000007800000000007C00000
000003E00000000003FFFFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFF
F80007C0001FF8001F800003FC003F000000FE003E0000007E007C0000003E007C000000
3F00F80000001F00F80000001F00F80000001F00F80000001F00F80000001F00FC000000
3F007C0000003E007E0000007E003F000000FC001F800001F8000FC00003F00003F0000F
C00000FE007F0000003FFFFC00000003FFC00000293D7EA82D>I<01F800000000FFF800
000000FFF800000000FFF80000000007F80000000003F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F803FC000001F80FFF800001F83C
0FC00001F8F003E00001F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE00
00FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF0
7FFFF8FFFFF07FFFF82D3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF8
0007F00001C0000000000000000000000000000000000000000000000000000000000000
0000000000000001F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80003FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE00
03FE0003FE0003FE0003FE0001FC00007000000000000000000000000000000000000000
00000000000000000000000000000000000000FE003FFE003FFE003FFE0001FE0000FE00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE
01F07803E03E07C00FFF0001FC00175084BC1C>I<01F800000000FFF800000000FFF800
000000FFF80000000007F80000000003F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F8007FFF8001F8007FFF8001F800
7FFF8001F8001FFC0001F8000FE00001F8000F800001F8001F000001F8001C000001F800
38000001F80070000001F800E0000001F803C0000001F80700000001F80E00000001F81E
00000001F83E00000001F87F00000001F9FF80000001FB9FC0000001FF0FC0000001FE07
E0000001FC07F0000001F803F0000001F801F8000001F801FC000001F800FE000001F800
7E000001F8003F000001F8003F800001F8001F800001F8000FC00001F8000FE00001F800
07F00001F80007F00001F80007F80003FC0007FE00FFFFF03FFFE0FFFFF03FFFE0FFFFF0
3FFFE02B3F7EBE30>I<01F800FFF800FFF800FFF80007F80003F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>I<01F803FC0001FE0000FF
F80FFF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F00007F9C003F0E001F80003
FB8001F9C000FC0001FB0001F98000FC0001FF0000FF80007E0001FE0000FF00007E0001
FE0000FF00007E0001FC0000FE00007E0001FC0000FE00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001
F80000FC00007E0001F80000FC00007E0001F80000FC00007E0003FC0001FE0000FF00FF
FFF07FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFC46287EA74B>I<01F803
FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003F00003FB8001F80001FB00
01F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000FC0001FC0000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0003FC00
01FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA732>I<0001FE0000000FFF
C000003F03F000007C00F80001F0003E0003E0001F0007C0000F8007C0000F800F800007
C01F800007E01F000003E03F000003F03F000003F07E000001F87E000001F87E000001F8
7E000001F8FE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE
000001FCFE000001FCFE000001FC7E000001F87E000001F87E000001F87F000003F83F00
0003F03F000003F01F800007E00F800007C00FC0000FC007C0000F8003E0001F0001F000
3E0000FC00FC00003F03F000000FFFC0000001FE0000262A7DA82D>I<01F807F80000FF
F81FFF0000FFF8780FC000FFF9E003F00003FB8001F80001FF0000FC0001FE00007E0001
FC00007F0001FC00003F8001F800001F8001F800001FC001F800001FC001F800000FE001
F800000FE001F800000FE001F800000FF001F8000007F001F8000007F001F8000007F001
F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001
F800000FE001F800000FE001F800000FE001F800000FE001F800001FC001F800001FC001
F800003F8001FC00003F0001FE00007F0001FE0000FE0001FF0001FC0001FB8003F80001
F9C007E00001F8F81F800001F83FFE000001F807F0000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000003FC00000000FF
FFF0000000FFFFF0000000FFFFF00000002C3A7EA732>I<0000FF000C000007FFC01C00
001F80F01C00007E00381C0000FC001C3C0003F8000E3C0007F000077C0007E000037C00
0FC00003FC001FC00001FC003F800001FC003F800000FC007F000000FC007F000000FC00
7F000000FC007F000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00
FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FF000000FC00
7F000000FC007F000000FC007F000000FC003F800000FC003F800001FC001FC00001FC00
0FC00003FC000FE00003FC0007E00007FC0003F0000EFC0001F8001CFC00007E0078FC00
003F01E0FC00000FFFC0FC000001FE00FC0000000000FC0000000000FC0000000000FC00
00000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00
00000000FC0000000000FC0000000000FC0000000000FC0000000001FE000000007FFFF8
0000007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF03FF0FFF0F0F8FFF1C3FC07
F183FC03F383FC01F703FC01F603FC01F601F801FE006001FC000001FC000001FC000001
FC000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000003FC0000FFFFF800FFFFF800FFFFF8001E
287EA723>I<007FC06003FFF8E007C03DE01E000FE03C0003E0780001E0780001E07000
00E0F00000E0F0000060F0000060F8000060F8000060FC000060FF0000007FC000007FFE
00003FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FFE000003FE000000FF0C000
03F0C00001F8C00000F8E00000F8E0000078E0000078F0000078F0000078F8000078F800
00F0FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC00C01FE0001D2A7DA824>
I<0018000000180000001800000018000000180000001800000038000000380000003800
0000380000007800000078000000F8000000F8000001F8000003F8000007F800001FFFFF
C0FFFFFFC0FFFFFFC001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8006001F8006001F8006001F8006001F800
6001F8006001F8006001F8006001F8006000FC00E000FC00C000FC00C0007E01C0003F03
80001F87000007FE000001F8001B397EB723>I<01F80000FC00FFF8007FFC00FFF8007F
FC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC0001F80001FC0001F80003
FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF00003E0038FFF8001F80F0
FFF80007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007FFE0FFFFC007FFE0FFFFC0
07FFE007FC0001FF0003F800007C0003F80000780001F80000700001FC0000700000FC00
00600000FC00006000007E0000C000007E0000C000007F0001C000003F00018000003F00
018000001F80030000001F80030000001FC0070000000FC0060000000FC00600000007E0
0C00000007E00C00000007F01C00000003F01800000003F01800000001F83000000001F8
3000000001FC7000000000FC6000000000FC60000000007EC0000000007EC0000000007F
C0000000003F80000000003F80000000001F00000000001F00000000001F00000000000E
00000000000E0000002B287EA630>I<FFFF87FFFC03FFF0FFFF87FFFC03FFF0FFFF87FF
FC03FFF00FFC003FE0007FC007F0001FC0003F0003F0000F80001E0003F0000FC0001C00
01F8000FC0001C0001F80007C000180001F80007E000180000FC000FE000300000FC000F
E000300000FE000FF0007000007E0019F0006000007E0019F0006000007F0019F800E000
003F0030F800C000003F0030F800C000003F8030FC01C000001F80607C018000001F8060
7C018000000FC0E07E030000000FC0C03E030000000FC0C03E0300000007E1C03F060000
0007E1801F0600000007E1801F8600000003F3801F8C00000003F3000F8C00000003F300
0FCC00000001FE0007D800000001FE0007D800000001FE0007F800000000FC0003F00000
0000FC0003F000000000FC0003F000000000780001E000000000780001E0000000007800
01E000000000300000C000003C287EA641>I<7FFFC00FFFE07FFFC00FFFE07FFFC00FFF
E003FF0007FE0000FF0003F800007F0003E000003F0003C000003F80038000001FC00700
00000FC00E00000007E00C00000007F01800000003F83800000001F87000000000FCE000
000000FEC0000000007F80000000003F80000000001F80000000000FC0000000000FE000
0000001FE0000000003BF00000000071F800000000E1FC00000000C0FE00000001807E00
000003803F00000007003F8000000E001FC000000C000FC000001C0007E00000380007F0
0000F80003F80001F80003FC000FFC0007FE00FFFF001FFFF8FFFF001FFFF8FFFF001FFF
F82D277FA630>I<FFFFC007FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F80000
7C0001F80000780001F80000700001FC0000700000FC0000600000FE00006000007E0000
C000007E0000C000003F00018000003F00018000003F80038000001F80030000001F8003
0000000FC0060000000FC0060000000FE00E00000007E00C00000007E00C00000003F018
00000003F01800000003F83800000001F83000000001FC3000000000FC6000000000FC60
000000007EC0000000007EC0000000007FC0000000003F80000000003F80000000001F00
000000001F00000000001F00000000000E00000000000E00000000000C00000000000C00
000000001C00000000001800000000001800000000003000000000003000000000006000
00003800600000007C00E0000000FE00C0000000FE01C0000000FE0180000000FE030000
00007C0700000000700E00000000383C000000001FF80000000007E0000000002B3A7EA6
30>I<1FFFFFFF801FFFFFFF801FE0007F801F00007F001E0000FE001C0001FC001C0003
FC00180003F800380007F00038000FE00030001FE00030001FC00030003F800030007F00
0030007F00000000FE00000001FC00000003FC00000003F800000007F00000000FE00000
001FE00000001FC00180003F800180007F000180007F00018000FE00018001FC00018003
FC00038003F800038007F00003000FE00003001FE00007001FC0000F003F80000F007F00
003F00FF0001FF00FFFFFFFF00FFFFFFFF0021277EA628>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecbx1440 14.4 12
/Fh 12 117 df<0000001E00000000003E0000000000FE0000000003FE000000000FFE00
0000007FFE00000007FFFE000003FFFFFE0000FFFFFFFE0000FFFFFFFE0000FFFFFFFE00
00FFF87FFE0000FC007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE00007FFFFFFFFFFC7FFFFFFFFFFC7FFFFFFFFFFC7FFFFFFFFF
FC7FFFFFFFFFFC2E4E76CD42>49 D<FFFFFFFFFF80FFFFFFFFFF80FFFFFFFFFF80FFFFFF
FFFF80FFFFFFFFFF800007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF000000007FFF000000007FFF000000007FFF000000007FFF000000007FF
F000000007FFF00000FFFFFFFFFF80FFFFFFFFFF80FFFFFFFFFF80FFFFFFFFFF80FFFFFF
FFFF8029527DD130>73 D<00003FFE000000000007FFFFE0000000001FFFFFFC00000000
7FFFFFFF00000001FFC00FFFC0000003FE0003FFE0000007FF0000FFF0000007FF80007F
F800000FFFC0007FFC00000FFFC0003FFE00000FFFC0003FFE00000FFFC0001FFF00000F
FFC0001FFF00000FFFC0001FFF00000FFFC0000FFF800007FF80000FFF800003FF00000F
FF800001FE00000FFF8000000000000FFF8000000000000FFF8000000000000FFF800000
0000000FFF8000000000000FFF8000000000000FFF800000000007FFFF8000000003FFFF
FF800000007FFFFFFF80000003FFFFFFFF8000001FFFF00FFF8000007FFF000FFF800000
FFFC000FFF800003FFF0000FFF800007FFC0000FFF80000FFF80000FFF80001FFF00000F
FF80003FFF00000FFF80003FFE00000FFF80007FFC00000FFF80007FFC00000FFF81F0FF
FC00000FFF81F0FFF800000FFF81F0FFF800000FFF81F0FFF800000FFF81F0FFF800001F
FF81F0FFF800001FFF81F0FFFC00003FFF81F07FFC00003FFF81F07FFE00007FFF81F03F
FE0000F7FFC3F03FFF0001E3FFC3E01FFFC007E3FFFFE007FFF01F81FFFFC003FFFFFF00
FFFF8000FFFFFC007FFF00001FFFF0003FFC000001FF800007F0003C387CB642>97
D<000003FFE0000000003FFFFE00000000FFFFFF80000003FFFFFFE000000FFF003FF800
003FFC0007FC00007FF8000FFE0000FFF0001FFE0001FFE0003FFF0003FFC0003FFF0007
FF80003FFF0007FF80003FFF000FFF00003FFF001FFF00003FFF001FFE00003FFF003FFE
00001FFE003FFE00000FFC003FFE000007F8007FFE00000000007FFC00000000007FFC00
000000007FFC0000000000FFFC0000000000FFFC0000000000FFFC0000000000FFFC0000
000000FFFC0000000000FFFC0000000000FFFC0000000000FFFC0000000000FFFC000000
0000FFFC0000000000FFFC0000000000FFFC0000000000FFFC00000000007FFC00000000
007FFE00000000007FFE00000000007FFE00000000003FFE00000000003FFF0000000000
1FFF0000000F801FFF0000000F800FFF8000001F800FFF8000001F0007FFC000003F0003
FFE000003E0001FFF000007E0000FFF80000FC00007FFC0001F800003FFF0007F000000F
FFC01FE0000007FFFFFF80000001FFFFFE000000003FFFF80000000003FF80000031387C
B63A>99 D<000007FF80000000007FFFF800000001FFFFFE00000007FFFFFF8000001FFF
03FFE000003FFC007FF000007FF0003FF80000FFE0001FFC0001FFC0000FFC0003FF8000
07FE0007FF800007FF000FFF000003FF000FFF000003FF801FFE000003FF801FFE000001
FF803FFE000001FFC03FFE000001FFC03FFE000001FFC07FFC000001FFC07FFC000001FF
E07FFC000000FFE07FFC000000FFE0FFFC000000FFE0FFFC000000FFE0FFFFFFFFFFFFE0
FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFC0000000000FFFC0000000000FF
FC0000000000FFFC0000000000FFFC0000000000FFFC00000000007FFC00000000007FFC
00000000007FFC00000000007FFE00000000003FFE00000000003FFE00000000003FFE00
000003E01FFF00000003E01FFF00000007E00FFF00000007C007FF8000000FC007FF8000
000F8003FFC000001F8001FFE000003F0000FFF000007E00007FFC0001FC00001FFF0007
F800000FFFE03FF0000003FFFFFFC0000000FFFFFF800000003FFFFC0000000001FFE000
0033387CB63C>101 D<00001FFE0000FE000001FFFFE007FF80000FFFFFFC1FFFC0003F
FFFFFF7FFFE0007FF807FFFF07E001FFE001FFF07FE003FFC000FFF07FE007FF80007FF8
3FE007FF00003FF83FC00FFF00003FFC1FC01FFF00003FFE07001FFE00001FFE00001FFE
00001FFE00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF
00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE
00001FFF00001FFE00001FFE00001FFE00001FFE00001FFF00003FFE00000FFF00003FFC
000007FF00003FF8000007FF80007FF8000003FFC000FFF0000001FFE001FFE0000000FF
F807FF80000001FFFFFFFF00000003EFFFFFFC00000003C1FFFFE000000007C01FFE0000
0000078000000000000007800000000000000FC00000000000000FC00000000000000FC0
0000000000000FE00000000000000FE00000000000000FF00000000000000FFC00000000
00000FFFFFFFFE00000007FFFFFFFFF0000007FFFFFFFFFC000007FFFFFFFFFF800003FF
FFFFFFFFC00003FFFFFFFFFFF00001FFFFFFFFFFF80000FFFFFFFFFFFC00007FFFFFFFFF
FC0001FFFFFFFFFFFE0007FFFFFFFFFFFE000FFC000003FFFF001FF80000003FFF003FF0
0000000FFF007FE000000007FF807FE000000003FF80FFC000000003FF80FFC000000001
FF80FFC000000001FF80FFC000000001FF80FFC000000001FF80FFC000000001FF80FFE0
00000003FF807FE000000003FF007FF000000007FF003FF000000007FE001FF80000000F
FC001FFE0000003FFC0007FF0000007FF00003FFC00001FFE00000FFFC001FFF8000003F
FFFFFFFE0000000FFFFFFFF800000001FFFFFFC0000000000FFFF80000003B4F7CB542>
103 D<003F000000FFC00001FFE00003FFF00003FFF00007FFF80007FFF80007FFF80007
FFF80007FFF80007FFF80003FFF00003FFF00001FFE00000FFC000003F00000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001FF800FFFFF800FFFFF800FFFFF800FFFFF800FF
FFF80001FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000
FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000
FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000
FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000
FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF80000FFF800FFFFFFF0FF
FFFFF0FFFFFFF0FFFFFFF0FFFFFFF01C547CD324>105 D<003FF0001FFC000000FFFFF0
00FFFF800000FFFFF003FFFFE00000FFFFF00FFFFFF80000FFFFF01FC07FFC0000FFFFF0
7E003FFE000003FFF0F8001FFF000000FFF1F0001FFF000000FFF1E0000FFF800000FFF3
C0000FFF800000FFF780000FFF800000FFF7000007FFC00000FFFF000007FFC00000FFFE
000007FFC00000FFFE000007FFC00000FFFC000007FFC00000FFFC000007FFC00000FFFC
000007FFC00000FFFC000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8
000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC000FFFFFF
F807FFFFFFC0FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC0FFFFFF
F807FFFFFFC042367CB549>110 D<000001FFC000000000003FFFFE0000000000FFFFFF
8000000003FFFFFFE00000000FFF80FFF80000003FFC001FFE0000007FF00007FF000000
FFE00003FF800001FFC00001FFC00003FF800000FFE00003FF0000007FE00007FF000000
7FF0000FFF0000007FF8000FFE0000003FF8001FFE0000003FFC001FFE0000003FFC003F
FE0000003FFE003FFC0000001FFE003FFC0000001FFE007FFC0000001FFF007FFC000000
1FFF007FFC0000001FFF007FFC0000001FFF00FFFC0000001FFF80FFFC0000001FFF80FF
FC0000001FFF80FFFC0000001FFF80FFFC0000001FFF80FFFC0000001FFF80FFFC000000
1FFF80FFFC0000001FFF80FFFC0000001FFF80FFFC0000001FFF80FFFC0000001FFF80FF
FC0000001FFF807FFC0000001FFF007FFC0000001FFF007FFC0000001FFF003FFC000000
1FFE003FFE0000003FFE003FFE0000003FFE001FFE0000003FFC001FFE0000003FFC000F
FF0000007FF8000FFF0000007FF80007FF800000FFF00003FF800000FFE00001FFC00001
FFC00000FFE00003FF8000007FF00007FF0000003FFC001FFE0000001FFF80FFFC000000
07FFFFFFF000000001FFFFFFC0000000003FFFFE000000000003FFE000000039387CB642
>I<003FF001FC00FFFFF00FFF80FFFFF01FFFE0FFFFF07FFFF0FFFFF0FE1FF8FFFFF1F8
3FF801FFF1F07FFC00FFF3E07FFC00FFF3C07FFC00FFF7807FFC00FFF7807FFC00FFFF00
7FFC00FFFF003FF800FFFE001FF000FFFE000FE000FFFE00000000FFFC00000000FFFC00
000000FFFC00000000FFFC00000000FFF800000000FFF800000000FFF800000000FFF800
000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800
000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800
000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800
000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800
000000FFF8000000FFFFFFFE0000FFFFFFFE0000FFFFFFFE0000FFFFFFFE0000FFFFFFFE
00002E367DB535>114 D<0003FFC00E00001FFFFC1E0000FFFFFF7E0003FFFFFFFE0007
FE003FFE000FF0000FFE001FE00003FE003FC00001FE003F800000FE007F800000FE007F
0000007E007F0000007E00FF0000003E00FF0000003E00FF8000003E00FF8000003E00FF
C000003E00FFF000000000FFFC00000000FFFF800000007FFFFE0000007FFFFFF000003F
FFFFFE00003FFFFFFF80001FFFFFFFE0000FFFFFFFF00007FFFFFFFC0003FFFFFFFE0000
FFFFFFFF00003FFFFFFF00000FFFFFFF800001FFFFFF8000000FFFFFC00000003FFFC000
000007FFE000000001FFE0F8000000FFE0F80000007FE0FC0000003FE0FC0000003FE0FC
0000001FE0FE0000001FE0FE0000001FE0FE0000001FC0FF0000001FC0FF8000003FC0FF
8000003F80FFC000003F80FFE000007F00FFF80000FF00FFFC0003FE00FFFF801FFC00FE
7FFFFFF000F81FFFFFC000F007FFFF0000E0007FF000002B387CB634>I<00007C000000
00007C00000000007C00000000007C00000000007C00000000007C0000000000FC000000
0000FC0000000000FC0000000000FC0000000001FC0000000001FC0000000001FC000000
0003FC0000000003FC0000000007FC0000000007FC000000000FFC000000001FFC000000
003FFC000000007FFC00000000FFFC00000003FFFC0000000FFFFFFFFE00FFFFFFFFFE00
FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE00007FFC000000007FFC000000007FFC000000
007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000
007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000
007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000
007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000
007FFC000F80007FFC000F80007FFC000F80007FFC000F80007FFC000F80007FFC000F80
007FFC000F80007FFC000F80007FFC000F80007FFC000F80007FFC000F80007FFC001F00
003FFE001F00003FFE001F00001FFE003E00001FFF003E00000FFF807C000007FFC1F800
0003FFFFF0000000FFFFE00000003FFF8000000003FE0000294D7ECB33>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecbx1095 10.95 31
/Fi 31 122 df<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE007800E
0E798D1D>46 D<00000F000000001F000000007F00000001FF0000000FFF000001FFFF00
00FFFFFF0000FFFFFF0000FFF7FF0000FE07FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF
00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00003F
FFFFFFF83FFFFFFFF83FFFFFFFF83FFFFFFFF8253C79BB34>49 D<0003FF800000003FFF
F8000000FFFFFE000003FFFFFF800007F80FFFC0000FC001FFF0001F8000FFF8003F0000
7FFC007FC0003FFE007FE0003FFE00FFF0001FFF00FFF8001FFF00FFF8001FFF00FFF800
0FFF80FFF8000FFF80FFF8000FFF80FFF8000FFF807FF0000FFF807FF0000FFF801FC000
0FFF800700000FFF800000000FFF000000001FFF000000001FFF000000001FFE00000000
3FFE000000003FFC000000007FF8000000007FF000000000FFE000000001FFC000000001
FF8000000003FF0000000007FE000000000FF8000000001FF0000000001FE0000000003F
80000000007F0000000000FE0000000001F80007800003F00007800007E0000780000FC0
000F00001F80000F00003E00000F00007C00000F0000F800001F0001F000001F0001FFFF
FFFF0003FFFFFFFE0007FFFFFFFE000FFFFFFFFE001FFFFFFFFE003FFFFFFFFE007FFFFF
FFFE00FFFFFFFFFE00FFFFFFFFFC00FFFFFFFFFC00FFFFFFFFFC00293C7BBB34>I<FFFF
FFFFFFF8000000FFFFFFFFFFFF800000FFFFFFFFFFFFF00000FFFFFFFFFFFFFC0000003F
FE00007FFF0000003FFE00000FFFC000003FFE000003FFE000003FFE000000FFF000003F
FE0000003FF800003FFE0000001FFC00003FFE0000000FFE00003FFE0000000FFF00003F
FE00000007FF80003FFE00000003FF80003FFE00000003FFC0003FFE00000003FFC0003F
FE00000001FFE0003FFE00000001FFE0003FFE00000001FFF0003FFE00000000FFF0003F
FE00000000FFF0003FFE00000000FFF8003FFE00000000FFF8003FFE00000000FFF8003F
FE00000000FFF8003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFF8003FFE00000000FFF8003F
FE00000000FFF8003FFE00000000FFF8003FFE00000000FFF0003FFE00000000FFF0003F
FE00000001FFF0003FFE00000001FFE0003FFE00000001FFE0003FFE00000003FFC0003F
FE00000003FFC0003FFE00000007FF80003FFE00000007FF00003FFE0000000FFF00003F
FE0000001FFE00003FFE0000003FFC00003FFE000000FFF800003FFE000001FFE000003F
FE00000FFFC000003FFE00007FFF8000FFFFFFFFFFFFFE0000FFFFFFFFFFFFF80000FFFF
FFFFFFFFC00000FFFFFFFFFFF8000000463E7DBD50>68 D<00000007FFC0000E00000000
FFFFF8001E00000007FFFFFF003E0000003FFFFFFFC07E000000FFFF801FE0FE000001FF
F80003FBFE000007FFC00000FFFE00001FFF0000007FFE00003FFE0000003FFE00007FFC
0000001FFE0000FFF00000000FFE0001FFF000000007FE0003FFE000000003FE0003FFC0
00000001FE0007FF8000000001FE000FFF8000000000FE000FFF0000000000FE001FFF00
000000007E001FFF00000000007E003FFE00000000007E003FFE00000000007E003FFE00
000000003E007FFE00000000003E007FFE00000000003E007FFC000000000000007FFC00
000000000000FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC00
000000000000FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC00
000000000000FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC00
0007FFFFFFFC7FFC000007FFFFFFFC7FFC000007FFFFFFFC7FFE000007FFFFFFFC7FFE00
0000003FFE003FFE000000003FFE003FFE000000003FFE003FFE000000003FFE001FFF00
0000003FFE001FFF000000003FFE000FFF800000003FFE000FFF800000003FFE0007FFC0
0000003FFE0003FFC00000003FFE0003FFE00000003FFE0001FFF00000003FFE0000FFF8
0000003FFE00007FFC0000007FFE00003FFE0000007FFE00001FFF000000FFFE000007FF
C00001FFFE000001FFF80003FFFE000000FFFF801FF1FE0000003FFFFFFFC07E00000007
FFFFFF001E00000000FFFFFC00060000000007FFC000000046407ABE52>71
D<FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF80003FFE0000003FFE0000003FFE0000
003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE000000
3FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003F
FE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE
0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE00
00003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000
003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE000000
3FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003FFE0000003F
FE0000FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF80213E7DBD27>73
D<FFFFFE00000000001FFFFFE0FFFFFF00000000003FFFFFE0FFFFFF00000000003FFFFF
E0FFFFFF80000000007FFFFFE0003FFF80000000007FFF8000003FFF80000000007FFF80
00003DFFC000000000F7FF8000003DFFC000000000F7FF8000003CFFE000000001E7FF80
00003CFFE000000001E7FF8000003C7FF000000003C7FF8000003C7FF000000003C7FF80
00003C3FF80000000787FF8000003C3FF80000000787FF8000003C3FF80000000787FF80
00003C1FFC0000000F07FF8000003C1FFC0000000F07FF8000003C0FFE0000001E07FF80
00003C0FFE0000001E07FF8000003C07FF0000003C07FF8000003C07FF0000003C07FF80
00003C03FF8000007807FF8000003C03FF8000007807FF8000003C03FF8000007807FF80
00003C01FFC00000F007FF8000003C01FFC00000F007FF8000003C00FFE00001E007FF80
00003C00FFE00001E007FF8000003C007FF00003C007FF8000003C007FF00003C007FF80
00003C003FF800078007FF8000003C003FF800078007FF8000003C003FF800078007FF80
00003C001FFC000F0007FF8000003C001FFC000F0007FF8000003C000FFE001E0007FF80
00003C000FFE001E0007FF8000003C0007FF003C0007FF8000003C0007FF003C0007FF80
00003C0003FF80780007FF8000003C0003FF80780007FF8000003C0003FF80780007FF80
00003C0001FFC0F00007FF8000003C0001FFC0F00007FF8000003C0000FFE1E00007FF80
00003C0000FFE1E00007FF8000003C00007FF3C00007FF8000003C00007FF3C00007FF80
00003C00003FFF800007FF8000003C00003FFF800007FF8000003C00003FFF800007FF80
00003C00001FFF000007FF8000003C00001FFF000007FF8000003C00000FFE000007FF80
00003C00000FFE000007FF8000003C000007FC000007FF8000003C000007FC000007FF80
00007E000003F8000007FF8000FFFFFF0003F8001FFFFFFFE0FFFFFF0003F8001FFFFFFF
E0FFFFFF0001F0001FFFFFFFE0FFFFFF0000E0001FFFFFFFE05B3E7DBD62>77
D<FFFFFE0000003FFFFFFFFFFF0000003FFFFFFFFFFF8000003FFFFFFFFFFF8000003FFF
FF007FFFC00000003F00007FFFE00000001E00007FFFF00000001E00007BFFF80000001E
000079FFFC0000001E000079FFFE0000001E000078FFFE0000001E0000787FFF0000001E
0000783FFF8000001E0000781FFFC000001E0000780FFFE000001E0000780FFFF000001E
00007807FFF000001E00007803FFF800001E00007801FFFC00001E00007800FFFE00001E
000078007FFF00001E000078003FFF80001E000078003FFFC0001E000078001FFFC0001E
000078000FFFE0001E0000780007FFF0001E0000780003FFF8001E0000780001FFFC001E
0000780001FFFE001E0000780000FFFE001E00007800007FFF001E00007800003FFF801E
00007800001FFFC01E00007800000FFFE01E000078000007FFF01E000078000007FFF81E
000078000003FFF81E000078000001FFFC1E000078000000FFFE1E0000780000007FFF1E
0000780000003FFF9E0000780000003FFFDE0000780000001FFFFE0000780000000FFFFE
00007800000007FFFE00007800000003FFFE00007800000001FFFE00007800000000FFFE
00007800000000FFFE000078000000007FFE000078000000003FFE000078000000001FFE
000078000000000FFE0000780000000007FE0000780000000007FE0000780000000003FE
0000780000000001FE0000FC0000000000FE00FFFFFC000000007E00FFFFFC000000003E
00FFFFFC000000001E00FFFFFC000000001E00483E7CBD51>I<0000003FFE0000000000
0003FFFFE000000000001FFFFFFC0000000000FFF007FF8000000001FF8000FFC0000000
07FF00007FF00000000FFC00001FF80000003FF800000FFE0000007FF0000007FF000000
FFE0000003FF800001FFC0000001FFC00001FFC0000001FFC00003FF80000000FFE00007
FF80000000FFF0000FFF000000007FF8000FFF000000007FF8001FFF000000007FFC001F
FE000000003FFC001FFE000000003FFC003FFE000000003FFE003FFE000000003FFE003F
FE000000003FFE007FFC000000001FFF007FFC000000001FFF007FFC000000001FFF007F
FC000000001FFF00FFFC000000001FFF80FFFC000000001FFF80FFFC000000001FFF80FF
FC000000001FFF80FFFC000000001FFF80FFFC000000001FFF80FFFC000000001FFF80FF
FC000000001FFF80FFFC000000001FFF80FFFC000000001FFF80FFFC000000001FFF80FF
FC000000001FFF80FFFC000000001FFF807FFC000000001FFF007FFC000000001FFF007F
FE000000003FFF007FFE000000003FFF003FFE000000003FFE003FFE000000003FFE003F
FE000000003FFE001FFF000000007FFC001FFF000000007FFC000FFF000000007FF8000F
FF80000000FFF80007FF80000000FFF00003FFC0000001FFE00003FFE0000003FFE00001
FFE0000003FFC00000FFF0000007FF8000007FF800000FFF0000003FFC00001FFE000000
1FFF00007FFC00000007FFC001FFF000000003FFF007FFE000000000FFFFFFFF80000000
001FFFFFFC000000000007FFFFF00000000000003FFE0000000041407ABE4E>I<0001FF
8001C0001FFFF803C0007FFFFE07C001FFFFFF8FC003FF007FDFC007F8000FFFC00FF000
03FFC01FE00001FFC03FC000007FC03FC000003FC07FC000003FC07F8000001FC07F8000
000FC0FF8000000FC0FF80000007C0FF80000007C0FFC0000007C0FFC0000007C0FFE000
0003C0FFE0000003C0FFF0000003C0FFFC00000000FFFF000000007FFFF80000007FFFFF
8000007FFFFFFC00003FFFFFFF80001FFFFFFFE0001FFFFFFFF8000FFFFFFFFC0007FFFF
FFFE0003FFFFFFFF0001FFFFFFFF80007FFFFFFFC0001FFFFFFFC00007FFFFFFE000007F
FFFFE0000003FFFFF00000001FFFF000000003FFF000000000FFF8000000007FF8000000
003FF8F00000003FF8F00000001FF8F00000001FF8F00000000FF8F00000000FF8F80000
000FF8F80000000FF8F80000000FF0FC0000000FF0FE0000000FF0FE0000001FE0FF0000
001FE0FF8000003FC0FFE000003FC0FFF000007F80FFFE0001FF00FEFFE007FE00FC3FFF
FFF800F80FFFFFF000F003FFFF8000E0001FFC00002D407ABE3A>83
D<0007FF800000003FFFF0000001FFFFFC000003FC03FF000007E000FFC0000FF8007FE0
001FF8003FF0001FFC003FF0001FFC001FF8001FFC001FF8001FFC000FFC001FFC000FFC
000FF8000FFC0007F0000FFC0001C0000FFC000000000FFC000000000FFC000000000FFC
00000003FFFC000001FFFFFC00000FFFFFFC00007FFF8FFC0001FFF00FFC0007FF800FFC
000FFF000FFC001FFC000FFC003FF8000FFC007FF8000FFC007FF0000FFC00FFF0000FFC
00FFE0000FFC00FFE0000FFC00FFE0000FFC00FFE0001FFC00FFE0001FFC00FFF0003FFC
007FF0003FFC007FF8007FFF003FFC01F7FFFC1FFE07E3FFFC07FFFF81FFFC01FFFE007F
FC001FF80000002E2B7DA932>97 D<00FF0000000000FFFF0000000000FFFF0000000000
FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF007FE0000003FF07FF
FC000003FF1FFFFF000003FF7F00FFC00003FFF8003FF00003FFF0001FF80003FFE0000F
FC0003FF800007FE0003FF800007FF0003FF000003FF0003FF000003FF8003FF000003FF
8003FF000003FFC003FF000001FFC003FF000001FFC003FF000001FFC003FF000001FFE0
03FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003
FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFC003FF
000001FFC003FF000001FFC003FF000003FFC003FF000003FF8003FF000003FF8003FF00
0007FF0003FF800007FE0003FFC0000FFE0003FFE0000FFC0003FDF0001FF80003F8F800
7FE00003F07F01FFC00003E01FFFFF000003C007FFF80000000000FFC0000033407DBE3A
>I<00007FF0000003FFFF00001FFFFFC0007FE01FE000FF8003F001FF000FF803FE000F
FC07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8001FFC3FF8000FF87FF80007F0
7FF00001C07FF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FF
F0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF0
0000007FF80000007FF80000003FF800001E3FFC00001E1FFC00003E0FFC00003C0FFE00
007C07FF0000F803FF8001F000FFC003E0007FF00FC0001FFFFF000007FFFC0000007FE0
00272B7DA92E>I<0000000007F80000000007FFF80000000007FFF80000000007FFF800
00000007FFF800000000003FF800000000001FF800000000001FF800000000001FF80000
0000001FF800000000001FF800000000001FF800000000001FF800000000001FF8000000
00001FF800000000001FF800000000001FF800000000001FF800000000001FF800000000
001FF800000000001FF800000000001FF80000007FE01FF8000003FFFC1FF800001FFFFF
1FF800007FF00FDFF80000FFC003FFF80003FF0000FFF80007FE00007FF8000FFE00003F
F8000FFC00001FF8001FFC00001FF8003FF800001FF8003FF800001FF8007FF800001FF8
007FF000001FF8007FF000001FF8007FF000001FF800FFF000001FF800FFF000001FF800
FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FF
F000001FF800FFF000001FF800FFF000001FF8007FF000001FF8007FF000001FF8007FF0
00001FF8007FF800001FF8003FF800001FF8003FF800001FF8001FF800001FF8001FFC00
003FF8000FFC00007FF80007FE0000FFF80003FF0001FFFC0001FF8007FFFFE0007FE01F
9FFFE0001FFFFE1FFFE00007FFF81FFFE000007FC01FE00033407DBE3A>I<0000FFE000
0007FFFC00003FFFFF00007FE0FF8001FF803FC003FF001FE007FE000FF00FFC000FF80F
FC0007FC1FF80007FC3FF80003FE3FF80003FE3FF80003FE7FF00003FE7FF00003FF7FF0
0003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000
0000FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF00000007FF00000
003FF80000003FF800000F1FF800000F1FFC00001F0FFC00001E07FE00003E03FE00007C
01FF0000F800FFC003F0007FF01FE0001FFFFFC00007FFFE0000007FF000282B7DA92F>
I<0003FF8003F0003FFFF81FFC00FFFFFE7FFE03FF01FFFCFE07FC007FE1FE0FFC007FE0
FE1FF8003FF0FE3FF8003FF87C3FF0001FF8003FF0001FF8007FF0001FFC007FF0001FFC
007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC003FF0001FF8
003FF0001FF8003FF8003FF8001FF8003FF0000FFC007FE00007FC007FC00007FF01FF80
0007FFFFFE00000F3FFFF800000F03FF8000001E00000000001E00000000001F00000000
001F00000000001F00000000001F80000000001FC0000000001FFFFFFF00000FFFFFFFF0
000FFFFFFFFC0007FFFFFFFF0007FFFFFFFF8003FFFFFFFFC003FFFFFFFFE00FFFFFFFFF
E01FC00001FFF03F8000001FF07F0000000FF87F00000007F8FE00000007F8FE00000003
F8FE00000003F8FE00000003F8FE00000003F8FF00000007F87F00000007F07F8000000F
F03FC000001FE01FE000003FC00FF80000FF8003FF800FFE0000FFFFFFF800001FFFFFC0
000001FFFC00002F3D7DA834>103 D<00FF0000000000FFFF0000000000FFFF00000000
00FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF0000000000
03FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF003FF0000003FF00
FFFE000003FF03FFFF800003FF0FC0FFC00003FF1E007FE00003FF3C003FF00003FF7800
3FF00003FFF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF80003FF80001F
F80003FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800FFFFFC
07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0333F7CBE3A>I<01F80003
FC0007FE000FFF001FFF801FFF801FFF801FFF801FFF801FFF800FFF0007FE0003FC0001
F80000000000000000000000000000000000000000000000000000000000FF00FFFF00FF
FF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FF
FFF8FFFFF8FFFFF815407CBF1D>I<00FF0000000000FFFF0000000000FFFF0000000000
FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF000000000003FF0003
FFFE0003FF0003FFFE0003FF0003FFFE0003FF0003FFFE0003FF0000FF800003FF0000FE
000003FF0001FC000003FF0003F0000003FF0007E0000003FF001FC0000003FF003F8000
0003FF007E00000003FF00FC00000003FF03F800000003FF07E000000003FF0FF0000000
03FF1FF800000003FF7FFC00000003FFFFFC00000003FFFFFE00000003FFFFFF00000003
FFE7FF80000003FF83FFC0000003FF01FFC0000003FE00FFE0000003FE00FFF0000003FE
007FF8000003FE003FFC000003FE001FFC000003FE000FFE000003FE000FFF000003FE00
07FF800003FE0003FFC00003FE0001FFC00003FE0000FFE00003FE0000FFF000FFFFF807
FFFFC0FFFFF807FFFFC0FFFFF807FFFFC0FFFFF807FFFFC0323F7DBE37>107
D<00FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFF
FCFFFFFCFFFFFCFFFFFC163F7CBE1D>I<01FE003FF00001FF8000FFFE00FFFE0007FFF0
00FFFE03FFFF801FFFFC00FFFE0FC0FFC07E07FE00FFFE1E007FE0F003FF0007FE3C003F
F1E001FF8003FE78003FF3C001FF8003FEF0003FF78001FF8003FFE0001FFF0000FFC003
FFC0001FFE0000FFC003FFC0001FFE0000FFC003FF80001FFC0000FFC003FF80001FFC00
00FFC003FF80001FFC0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00
001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001F
F80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003
FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF800
00FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00
001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0FFFFFC07FFFFE03FFF
FFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50297CA857
>I<01FE003FF00000FFFE00FFFE0000FFFE03FFFF8000FFFE0FC0FFC000FFFE1E007FE0
0007FE3C003FF00003FE78003FF00003FEF0003FF00003FFE0001FF80003FFC0001FF800
03FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFF
E033297CA83A>I<00007FF000000003FFFE0000001FFFFFC000007FE03FF00000FF800F
F80001FF0007FC0003FE0003FE0007FC0001FF000FF80000FF801FF80000FFC01FF80000
FFC03FF80000FFE03FF000007FE07FF000007FF07FF000007FF07FF000007FF07FF00000
7FF0FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF00000
7FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF87FF000007FF07FF00000
7FF07FF000007FF07FF000007FF03FF80000FFE03FF80000FFE01FF80000FFC00FF80000
FF800FFC0001FF8007FE0003FF0003FF0007FE0001FF800FFC00007FE03FF000001FFFFF
C0000007FFFF000000007FF000002D2B7DA934>I<00FF007FE00000FFFF07FFFC0000FF
FF1FFFFF0000FFFF7F01FFC000FFFFF8007FF00007FFF0003FF80003FFE0001FFC0003FF
80000FFE0003FF80000FFF0003FF000007FF0003FF000007FF8003FF000003FF8003FF00
0003FFC003FF000003FFC003FF000003FFC003FF000001FFC003FF000001FFE003FF0000
01FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001
FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFC003FF000003FF
C003FF000003FFC003FF000003FFC003FF000007FF8003FF000007FF8003FF000007FF00
03FF80000FFE0003FFC0001FFE0003FFE0001FFC0003FFF0003FF80003FFF800FFE00003
FF7F03FFC00003FF1FFFFF000003FF07FFF8000003FF00FFC0000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF000000000003FF0000
00000003FF0000000000FFFFFC00000000FFFFFC00000000FFFFFC00000000FFFFFC0000
0000333B7DA83A>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE3F1FF0FFFE3C1FF007FE
783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FFC01FF003FF800FE003FF80
038003FF80000003FF80000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF00002529
7DA82B>114 D<001FF80E0001FFFF3E0007FFFFFE000FE007FE001F8001FE003F0000FE
007E00007E007C00003E00FC00003E00FC00001E00FC00001E00FE00001E00FF00001E00
FF80000000FFE0000000FFFF0000007FFFFC00007FFFFF80003FFFFFE0001FFFFFF8000F
FFFFFC0003FFFFFE0000FFFFFF00003FFFFF000003FFFF8000000FFF80000001FFC0F000
007FC0F000003FC0F800001FC0F800001FC0F800000FC0FC00000FC0FC00000FC0FE0000
0F80FE00001F80FF00001F00FF80003F00FFE0007E00FFF803FC00FCFFFFF000F03FFFC0
00E007FE0000222B7DA929>I<0007800000078000000780000007800000078000000F80
00000F8000000F8000000F8000001F8000001F8000001F8000003F8000007F8000007F80
0000FF800001FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001FF80
0001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80
0001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80
0001FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF80
1E00FF803C00FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F3B7E
B928>I<00FF000007F800FFFF0007FFF800FFFF0007FFF800FFFF0007FFF800FFFF0007
FFF80007FF00003FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00003FF80003FF00003FF80003FF00003FF80003FF00007FF80001FF0000FFF80001FF00
00FFF80001FF8001FFFC0000FF8007DFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF8
1FFFE00000FFE01FE000332A7CA83A>I<FFFFF8001FFFC0FFFFF8001FFFC0FFFFF8001F
FFC0FFFFF8001FFFC003FF800003F80001FF800001E00001FFC00003E00000FFC00003C0
0000FFE00003C000007FE000078000007FF000078000007FF0000F8000003FF0000F0000
003FF8001F0000001FF8001E0000001FFC003E0000000FFC003C0000000FFE007C000000
07FE007800000007FF00F800000003FF00F000000003FF81F000000001FF81E000000001
FFC1E000000000FFC3C000000000FFE3C000000000FFE7C0000000007FE780000000007F
FF80000000003FFF00000000003FFF00000000001FFE00000000001FFE00000000000FFC
00000000000FFC000000000007F8000000000007F8000000000003F0000000000003F000
0000000001E000000032287EA737>I<FFFFF83FFFF801FFFCFFFFF83FFFF801FFFCFFFF
F83FFFF801FFFCFFFFF83FFFF801FFFC03FF0000FF80001F8003FF0000FF80000F0003FF
80007F80001F0001FF80007FC0001E0001FF8000FFC0001E0000FFC000FFE0003C0000FF
C000FFE0003C0000FFE001FFE0007C00007FE001FFF0007800007FE003FFF0007800003F
F003CFF800F000003FF003CFF800F000003FF80787F801F000001FF80787FC01E000001F
F80F87FC01E000000FFC0F03FE03C000000FFC0F03FE03C000000FFE1E01FE07C0000007
FE1E01FF0780000007FE3E01FF0780000003FF3C00FF8F00000003FF3C00FF8F00000003
FFF8007F9F00000001FFF8007FDE00000001FFF8007FDE00000000FFF0003FFC00000000
FFF0003FFC00000000FFE0001FFC000000007FE0001FF8000000007FE0001FF800000000
3FC0000FF0000000003FC0000FF0000000003F800007F0000000001F800007E000000000
1F800007E0000000000F000003C0000046287EA74B>I<FFFFF8001FFFC0FFFFF8001FFF
C0FFFFF8001FFFC0FFFFF8001FFFC003FF800003F80001FF800001E00001FFC00003E000
00FFC00003C00000FFE00003C000007FE000078000007FF000078000007FF0000F800000
3FF0000F0000003FF8001F0000001FF8001E0000001FFC003E0000000FFC003C0000000F
FE007C00000007FE007800000007FF00F800000003FF00F000000003FF81F000000001FF
81E000000001FFC1E000000000FFC3C000000000FFE3C000000000FFE7C0000000007FE7
80000000007FFF80000000003FFF00000000003FFF00000000001FFE00000000001FFE00
000000000FFC00000000000FFC000000000007F8000000000007F8000000000003F00000
00000003F0000000000001E0000000000001E0000000000003E0000000000003C0000000
000007C0000000000007800000000C000F800000003F000F000000007F801F00000000FF
C01E00000000FFC03E00000000FFC03C00000000FFC07800000000FFC0F8000000007F81
F0000000007F03E0000000003E0FC0000000001FFF80000000000FFE000000000003F800
00000000323B7EA737>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray 821 228 a Fi(Multila)m(y)m(er)35
b(Surviv)-6 b(able)34 b(Optical)h(Net)m(w)m(ork)g(Design)p
382 266 2989 4 v Black 0 TeXcolorgray 382 548 a Fh(1)131
b(Instances)44 b(generation)523 751 y Fg(Exp)s(erimen)m(tations)38
b(for)d(the)h(MSOND)g(problem)h(will)f(b)s(e)g(based)g(on)g(t)m(w)m(o)h
(t)m(yp)s(es)382 864 y(of)27 b(instances)h(:)f(aleatory)h(and)g
(realistic)h(ones.)e(Both)h(instances)g(are)g(generated)h(\(with)382
977 y(some)h(mo)s(di\034cations\))i(from)e(some)h(kno)m(wn)g
(libraries')g(instances.)382 1090 y(The)24 b(instances)h(will)f(b)s(e)g
(in)g(the)h(follo)m(wing)g(form)f(:)g(Name_N2_N1_D,)h(where)g(Name)382
1202 y(is)36 b(the)h(name)g(of)g(the)g(instance,)g(often)g(to)g(design)
g(the)g(reference)g(from)g(the)g(library)382 1315 y(used)d(\(lik)m(e)g
(b)s(erlin)g(from)g(the)g(TSP)h(for)e(instance\),)i(N2)e(is)h(the)g(n)m
(um)m(b)s(er)h(of)e(no)s(des)h(of)382 1428 y(the)29 b(optical)g(la)m(y)
m(er,)h(N1)e(is)g(the)g(one)h(on)g(the)g(logical)g(la)m(y)m(er)g(and)g
(D)f(the)h(n)m(um)m(b)s(er)h(of)e(the)382 1541 y(demands.)36
b(W)-8 b(e)36 b(will)g(supp)s(ose)f(that)h(N2)f(is)g(alw)m(a)m(ys)h
(greater)g(than)g(N1)g(whic)m(h)g(is)f(the)382 1654 y(most)30
b(near)h(to)g(realit)m(y)-8 b(.)382 1767 y(In)30 b(all)g(of)g(the)h
(instances,)g(w)m(e)g(c)m(ho)s(ose)g(to)f(ha)m(v)m(e)i
Ff(N)10 b Fe(1)25 b Fd(')g Fe(0)p Ff(:)p Fe(75)p Ff(N)10
b Fe(2)2583 1734 y Fc(1)382 1880 y Fg(All)39 b(instances)h(for)f(the)h
(momen)m(t)i(will)e(b)s(e)f(euclidian)i(and)f(the)g(cost)f(of)g(the)h
(ob)5 b(jec-)382 1993 y(tiv)m(e)38 b(function)h(is)f(calculated)h
(through)g(the)g(euclidian)g(distances.)f(Other)h(t)m(yp)s(es)f(of)382
2106 y(cost)h(could)h(after)f(b)s(e)f(considered)j(:)e(the)g(TSP)h
(includes)f(for)g(instance)h(manhattan)382 2219 y(distances,)28
b(maxim)m(um)g(distances,)g(geographical)h(distances,)f
(pseudo-euclidian)i(ins-)382 2332 y(tances,)h(etc...)889
2299 y Fc(2)382 2575 y Fb(1.1)112 b(Aleatory)36 b(instances)p
0 TeXcolorgray 523 2747 a Fg(\025)p 0 TeXcolorgray 46
w(These)30 b(instances)h(are)g(generated)h(from)e(the)h(TSP)g
(euclidian)h(instances,)p 0 TeXcolorgray 523 2860 a(\025)p
0 TeXcolorgray 46 w(according)i(to)f(the)f(size)h(of)f(the)h(instance,)
h(w)m(e)f(c)m(ho)s(ose)g(the)g Ff(N)10 b Fe(2)33 b Fg(\034rst)f(no)s
(des)h(of)614 2972 y(the)24 b(original)h(instance)g(and)g(among)g(them)
f(the)h Ff(N)10 b Fe(1)24 b Fg(\034rst)g(no)s(des)g(for)g(the)h
(logical)614 3085 y(la)m(y)m(er,)p 0 TeXcolorgray 523
3198 a(\025)p 0 TeXcolorgray 46 w(c)m(hoice)44 b(of)e(the)h(demands)h
(:)f(based)g(on)g(the)g(n)m(um)m(b)s(er)h(of)e(the)h(demands,)h(the)614
3311 y(c)m(hoice)35 b(of)e(the)h(origins)g(and)g(destinations)g(of)f
(these)h(demands)g(is)f(completely)614 3424 y(aleatory)g(\(w)m(e)g(can)
g(also)f(think)h(ab)s(out)g(generating)h(this)e(p)s(oin)m(ts)h
(aleatory)g(but)614 3537 y(it)h(will)g(not)g(giv)m(e)h(the)f(real)g
(impact)h(of)f(augmen)m(ting)i(the)e(size)g(of)g(an)g(instance)614
3650 y(on)c(the)h(resolution\),)p 0 TeXcolorgray 523
3763 a(\025)p 0 TeXcolorgray 46 w(the)22 b(t)m(w)m(o)i(paths)e(routing)
h(the)g(demands)g(:)f(the)g(paths)h(are)f(c)m(ho)s(osen)h(as)f(follo)m
(wing.)614 3876 y(W)-8 b(e)36 b(\034rst)g(b)s(egin)g(b)m(y)h(c)m(ho)s
(osing)f(the)h(n)m(um)m(b)s(er)g(of)f(terminals)h(of)e(the)i(\034rst)f
(path)614 3989 y(and)26 b(after)f(w)m(e)h(generate)h(this)e(n)m(um)m(b)
s(er)i(from)f(the)g(no)s(des)f(of)g(the)h(graph)g(\(except)614
4102 y(the)33 b(origin)h(and)f(destination\).)i(W)-8
b(e)33 b(do)g(the)g(same)g(for)g(the)g(second)h(path.)f(W)-8
b(e)614 4214 y(c)m(ho)s(ose)23 b(the)h(n)m(um)m(b)s(er)h(of)e
(terminals)h(and)g(generate)g(these)f(ones)h(from)f(the)h(no)s(des)614
4327 y(that)e(ha)m(v)m(e)i(not)e(b)s(een)h(used)f(y)m(et.)h(Here)f(the)
g(aleatory)h(asp)s(ect)f(is)g(\034rst)g(ensured)h(b)m(y)614
4440 y(the)h(n)m(um)m(b)s(er)h(of)e(terminals)i(but)f(also)g(b)m(y)g
(the)g(c)m(hoice)h(of)e(terminals)i(themselv)m(es,)p
0 TeXcolorgray 523 4553 a(\025)p 0 TeXcolorgray 46 w(for)40
b(eac)m(h)h(size)f(of)g(the)g(instance,)i(w)m(e)e(will)h(try)f(it)g(on)
h(\034v)m(e)f(examples.)h(These)614 4666 y(examples)27
b(are)h(di\033eren)m(t)h(since)f(based)f(on)h(di\033eren)m(t)h
(instances)e(from)h(the)g(TSP)614 4779 y(\(let)i(us)g(sa)m(y)h(for)f
(instance)h(b)s(erlin52,)g(eil51,)g(etc...\))p 0 TeXcolorgray
523 4892 a(\025)p 0 TeXcolorgray 46 w(for)g(eac)m(h)i(size)f(of)f(the)i
(logical)f(la)m(y)m(er)h(\(N2_N1\),)g(w)m(e)f(generate)h(demands)g
(with)614 5005 y(the)d(follo)m(wing)i(densit)m(y)f(\()p
Fe(25\045)p Fg(,)g Fe(50\045)p Fg(,)g Fe(70\045)p Fg(\),)p
0 TeXcolorgray 382 5089 1196 4 v 485 5174 a Fa(1.)39
b(I)25 b(tried)h(also)h(to)e(b)r(e)h(the)f(most)g(near)h(to)g(realit)n
(y)g(but)f(I)g(am)g(not)h(sure)f(of)i(this)e(prop)r(ortion.)485
5266 y(2.)39 b(But)30 b(As)h(far)h(as)f(I)f(am)g(concerned,)h(I)g
(think)f(that)g(the)g(euclidian)i(is)f(alw)n(a)n(ys)h(the)e(nearest)h
(to)382 5357 y(realit)n(y)26 b(\(since)g(costs)g(of)h(optical)g(\034b)r
(ers)e(dep)r(end)g(actually)h(on)g(the)f(distance)h(b)r(et)n(w)n(een)f
(t)n(w)n(o)h(p)r(oin)n(ts\).)p 0 TeXcolorgray 0 TeXcolorgray
382 5539 2989 4 v 382 5652 a Fg(24/10/2011)2493 b(1)p
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 821
228 a Fi(Multila)m(y)m(er)35 b(Surviv)-6 b(able)34 b(Optical)h(Net)m(w)
m(ork)g(Design)p 382 266 2989 4 v 0 TeXcolorgray 0 TeXcolorgray
523 561 a Fg(\025)p 0 TeXcolorgray 46 w(for)40 b(these)g(instances,)g
(w)m(e)h(can)g(also,)f(imp)s(ose)g(the)g(n)m(um)m(b)s(er)i(of)e
(terminals)h(of)614 674 y(eac)m(h)29 b(demand)h(\(ho)m(w)m(ev)m(er)h
(the)e(c)m(hoice)h(itself)e(of)g(the)h(terminals)g(is)f(alw)m(a)m(ys)i
(k)m(ept)614 787 y(aleatory\).)44 b(This)f(can)g(help)h(us)f(compare)h
(the)f(impact)h(of)f(augmen)m(ting)i(the)614 900 y(n)m(um)m(b)s(er)32
b(of)e(terminals)h(on)f(the)h(resolution.)382 1143 y
Fb(1.2)112 b(Realistic)35 b(instances)382 1315 y Fi(1.2.1)103
b(Gra)m(vitory)34 b(mo)s(del)523 1487 y Fg(This)21 b(mo)s(del)g(w)m(as)
g(used)g(b)m(y)f(Sylvie)h(Borne)g(on)g(a)g(frenc)m(h)g(net)m(w)m(ork)i
(con)m(taining)f(some)382 1599 y(frenc)m(h)34 b(cities)f(\(see)g(her)g
(Phd)h(Thesis)f(P167\).)h(It)f(is)g(brie\035y)g(based)g(on)h(the)f
(follo)m(wing)382 1712 y(ideas)d(:)p 0 TeXcolorgray 523
1825 a(\025)p 0 TeXcolorgray 46 w(w)m(e)c(c)m(ho)s(ose)g(the)g
Ff(N)10 b Fe(2)25 b Fg(most)h(p)s(opulated)h(cities)e(and)h(among)h
(them)f(the)g Ff(N)10 b Fe(1)25 b Fg(most)614 1938 y(p)s(opulated)31
b(ones)f(as)g(w)m(ell,)p 0 TeXcolorgray 523 2051 a(\025)p
0 TeXcolorgray 46 w(based)25 b(on)g(a)h(gra)m(vitory)g(form)m(ula,)g(w)
m(e)g(calculate)g(for)f(all)g(the)h(p)s(ossible)f(demands)614
2164 y(\(all)31 b(p)s(ossible)f(com)m(binations)i(of)f(pairs)f(of)g(no)
s(des)h Ff(N)10 b Fe(1)p Fg(\))31 b(a)f(quan)m(tit)m(y)i(indicating)614
2277 y(its)f(v)m(olume)j(\(cf.)e(form)m(ula)h(PhD)f(Sylvie\).)h(w)m(e)f
(then)h(c)m(ho)s(ose)f(among)h(them)g(the)614 2390 y
Ff(D)g Fg(most)d(imp)s(ortan)m(t)i(demands,)p 0 TeXcolorgray
523 2503 a(\025)p 0 TeXcolorgray 46 w(to)25 b(generate)i(the)f(t)m(w)m
(o)h(paths,)f(w)m(e)g(forbid)g(the)f(direct)i(edge)f(b)s(et)m(w)m(een)h
(the)f(origin)614 2616 y(and)d(destination)g(and)g(some)g(edges)g(of)f
(the)h(graph.)h(W)-8 b(e)22 b(calculate)i(t)m(w)m(o)g(shortest)614
2729 y(paths)30 b(to)h(sta)m(y)f(the)h(nearest)g(to)f(realit)m(y)-8
b(.)382 2969 y Fi(1.2.2)103 b(Instances)36 b(based)e(on)h(the)g(SNDlib)
p 0 TeXcolorgray 523 3140 a Fg(\025)p 0 TeXcolorgray
46 w(w)m(e)29 b(c)m(ho)s(ose)g(the)g Ff(N)10 b Fe(2)28
b Fg(\034rst)h(no)s(des)f(of)g(the)h(original)g(instance)h(and)e(among)
i(them)614 3253 y(the)g Ff(N)10 b Fe(1)31 b Fg(\034rst)f(no)s(des)g
(for)h(the)f(logical)i(la)m(y)m(er,)p 0 TeXcolorgray
523 3366 a(\025)p 0 TeXcolorgray 46 w(w)m(e)41 b(c)m(ho)s(ose)g(the)g
Ff(D)i Fg(most)d(imp)s(ortan)m(t)i(demands)f(\(v)m(olume)h(of)e
(demands)h(are)614 3479 y(giv)m(en)31 b(in)f(the)h(instances\).)p
0 TeXcolorgray 382 5553 V 382 5665 a(24/10/2011)2493
b(2)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
